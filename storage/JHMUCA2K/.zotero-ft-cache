
Skip to content
This repository

    Pull requests
    Issues
    Marketplace
    Explore

        New repository Import repository New gist New organization
        This repository
        New issue 
    @Chen-Zhihui
        Signed in as Chen-Zhihui
        Your profile
        Your stars
        Your gists
        Help
        Settings
        Sign out

Sign out

    Watch 37
    Notifications
    Not watching Be notified when participating or @mentioned. Watch
    Watching Be notified of all conversations. Unwatch
    Ignoring Never be notified. Stop ignoring
    Unstar 317
    Star 317
    Fork
    Where should we fork this repository?
    Loading
    151

AlpacaDB / selectivesearch
Code Issues 14 Pull requests 1 Projects 0 Wiki Insights
Selective Search Implementation for Python

    42 commits
    2 branches
    3 releases
    7 contributors
    MIT

    Python 100.0%

Python
Clone or download
Use SSH
Clone with HTTPS

Use Git or checkout with SVN using the web URL.
Use HTTPS
Clone with SSH

Use an SSH key and passphrase from account.
Download ZIP
Launching GitHub Desktop ...

If nothing happens, download GitHub Desktop and try again.

Go back
Launching GitHub Desktop ...

If nothing happens, download GitHub Desktop and try again.

Go back
Launching Xcode ...

If nothing happens, download Xcode and try again.

Go back
Launching Visual Studio ...

If nothing happens, download the GitHub extension for Visual Studio and try again.

Go back
Create new file
Upload files Find file
Branch: develop
Switch branches/tags

    Branches
    Tags

develop master
Nothing to show
v0.4 0.2 0.1
Nothing to show
New pull request
Latest commit 52f7f83 Sep 15, 2017
@exilis
exilis committed Sep 15, 2017 Merge pull request #9 from danoneata/2to3 …

 2to3

Permalink
	Failed to load latest commit information.
	example 	Python2.x: Add backwards compatibility with Python2.x 	Oct 19, 2016
	selectivesearch 	Merge branch 'develop' into 2to3 	Sep 16, 2017
	.gitignore 	skimage (c) problem : lena -> astronaut 	Jul 21, 2016
	LICENSE 	Update LICENSE 	Jul 21, 2016
	README.md 	Add parameters info 	Oct 25, 2016
	setup.cfg 	initial draft 	Jul 10, 2015
	setup.py 	Bump the version 	Sep 15, 2017
README.md
Selective Search Implementation for Python

This is a simple Selective Search Implementation for Python
Install

 $ pip install selectivesearch  

Usage

It is super-simple.

 import  skimage.data
import  selectivesearch

img =  skimage.data.astronaut()
img_lbl, regions =  selectivesearch.selective_search(img, scale = 500 , sigma = 0.9 , min_size = 10 )
regions[: 10 ]
= > 
[{ ' labels '  : [ 0.0 ], ' rect '  : ( 0 , 0 , 15 , 24 ), ' size '  : 260 },
 { ' labels '  : [ 1.0 ], ' rect '  : ( 13 , 0 , 1 , 12 ), ' size '  : 23 },
 { ' labels '  : [ 2.0 ], ' rect '  : ( 0 , 15 , 15 , 11 ), ' size '  : 30 },
 { ' labels '  : [ 3.0 ], ' rect '  : ( 15 , 14 , 0 , 0 ), ' size '  : 1 },
 { ' labels '  : [ 4.0 ], ' rect '  : ( 0 , 0 , 61 , 153 ), ' size '  : 4927 },
 { ' labels '  : [ 5.0 ], ' rect '  : ( 0 , 12 , 61 , 142 ), ' size '  : 177 },
 { ' labels '  : [ 6.0 ], ' rect '  : ( 7 , 54 , 6 , 17 ), ' size '  : 8 },
 { ' labels '  : [ 7.0 ], ' rect '  : ( 28 , 50 , 18 , 32 ), ' size '  : 22 },
 { ' labels '  : [ 8.0 ], ' rect '  : ( 2 , 99 , 7 , 24 ), ' size '  : 24 },
 { ' labels '  : [ 9.0 ], ' rect '  : ( 14 , 118 , 79 , 117 ), ' size '  : 4008 }]

See also an example/example.py which generates : alt tag
Parameters of selective search

Let's see this paper: http://cs.brown.edu/~pff/papers/seg-ijcv.pdf
sigma

 In general we use a Gaussian filter to smooth the image slightly before computing the edge weights, in order to compensate for digitization artifacts. We always use a Gaussian with σ = 0.8, which does not produce any visible change to the image but helps remove artifacts.  

min_size

If the rect size is reached on min_size , the calculation is stopped.
scale

 There is one runtime parameter for the algorithm, which is the value of k that is used to compute the threshold function τ . Recall we use the function τ (C) = 14 k/|C| where |C| is the number of elements in C. Thus k effectively sets a scale of observation, in that a larger k causes a preference for larger components. We use two different parameter settings for the examples in this section (and throughout the paper), depending on the resolution of the image and the degree to which fine detail is important in the scene.  

Blog

    EN: http://blog.alpaca.ai/open-source-pure-python-selective-search-and-advanced-object-recognition-with-labellio/
    JP: http://blog-jp.alpaca.ai/entry/2015/08/05/235408

    © 2018 GitHub , Inc.
    Terms
    Privacy
    Security
    Status
    Help

    Contact GitHub
    API
    Training
    Shop
    Blog
    About

You can't perform that action at this time.
You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session.
Press h to open a hovercard with more details.
