
QR decomposition
From Wikipedia, the free encyclopedia
This is the current revision of this page, as edited by Mikhail Ryazanov ( talk  | contribs ) at 01:56, 3 June 2018 ( → ‎ top: punct. ) . The present address (URL) is a permanent link to this version.
Revision as of 01:56, 3 June 2018 by Mikhail Ryazanov ( talk  | contribs ) ( → ‎ top: punct. )
( diff ) ← Previous revision  | Latest revision (diff) | Newer revision → (diff)
Jump to navigation Jump to search

In linear algebra , a QR decomposition (also called a QR factorization ) of a matrix is a decomposition of a matrix A into a product A  =  QR of an orthogonal matrix Q and an upper triangular matrix   R . QR decomposition is often used to solve the linear least squares problem and is the basis for a particular eigenvalue algorithm , the QR algorithm .
Contents

    1 Cases and definitions
        1.1 Square matrix
        1.2 Rectangular matrix
        1.3 QL, RQ and LQ decompositions
    2 Computing the QR decomposition
        2.1 Using the Gram–Schmidt process
            2.1.1 Example
            2.1.2 Relation to RQ decomposition
            2.1.3 Advantages and disadvantages
        2.2 Using Householder reflections
            2.2.1 Example
            2.2.2 Advantages and disadvantages
        2.3 Using Givens rotations
            2.3.1 Example
            2.3.2 Advantages and disadvantages
    3 Connection to a determinant or a product of eigenvalues
    4 Column pivoting
    5 Using for solution to linear inverse problems
    6 Generalizations
    7 See also
    8 References
    9 Further reading
    10 External links

Cases and definitions [ edit ]
Square matrix [ edit ]

Any real square matrix A may be decomposed as

    A = Q R , {\displaystyle A=QR,\,} A = QR, \, 

where Q is an orthogonal matrix (its columns are orthogonal unit vectors meaning Q T Q = Q Q T = I {\displaystyle Q^{T}Q=QQ^{T}=I} {\displaystyle Q^{T}Q=QQ^{T}=I} ) and R is an upper triangular matrix (also called right triangular matrix). If A is invertible , then the factorization is unique if we require the diagonal elements of R to be positive.

If instead A is a complex square matrix, then there is a decomposition A = QR where Q is a unitary matrix (so Q ∗ Q = Q Q ∗ = I {\displaystyle Q^{*}Q=QQ^{*}=I} {\displaystyle Q^{*}Q=QQ^{*}=I} ).

If A has n linearly independent columns, then the first n columns of Q form an orthonormal basis for the column space of A . More generally, the first k columns of Q form an orthonormal basis for the span of the first k columns of A for any 1 ≤  k  ≤  n . [1] The fact that any column k of A only depends on the first k columns of Q is responsible for the triangular form of  R . [1]
Rectangular matrix [ edit ]

More generally, we can factor a complex m × n matrix A , with m  ≥  n , as the product of an m × m unitary matrix Q and an m × n upper triangular matrix R . As the bottom ( m − n ) rows of an m × n upper triangular matrix consist entirely of zeroes, it is often useful to partition R , or both R and Q :

    A = Q R = Q [ R 1 0 ] = [ Q 1 , Q 2 ] [ R 1 0 ] = Q 1 R 1 , {\displaystyle A=QR=Q{\begin{bmatrix}R_{1}\\0\end{bmatrix}}={\begin{bmatrix}Q_{1},Q_{2}\end{bmatrix}}{\begin{bmatrix}R_{1}\\0\end{bmatrix}}=Q_{1}R_{1},} A = QR = Q \begin{bmatrix} R_1 \\ 0 \end{bmatrix} = \begin{bmatrix} Q_1, Q_2 \end{bmatrix} \begin{bmatrix} R_1 \\ 0 \end{bmatrix} = Q_1 R_1, 

where R 1 is an n × n upper triangular matrix, 0 is an ( m  −  n )× n zero matrix, Q 1 is m × n , Q 2 is m ×( m  −  n ), and Q 1 and Q 2 both have orthogonal columns.

Golub & Van Loan (1996 , §5.2) call Q 1 R 1 the thin QR factorization of A ; Trefethen and Bau call this the reduced QR factorization . [1] If A is of full rank n and we require that the diagonal elements of R 1 are positive then R 1 and Q 1 are unique, but in general Q 2 is not. R 1 is then equal to the upper triangular factor of the Cholesky decomposition of A * A (=  A T A if A is real).
QL, RQ and LQ decompositions [ edit ]

Analogously, we can define QL, RQ, and LQ decompositions, with L being a lower triangular matrix.
Computing the QR decomposition [ edit ]

There are several methods for actually computing the QR decomposition, such as by means of the Gram–Schmidt process , Householder transformations , or Givens rotations . Each has a number of advantages and disadvantages.
Using the Gram–Schmidt process [ edit ]
Further information: Gram–Schmidt § Numerical stability

Consider the Gram–Schmidt process applied to the columns of the full column rank matrix A = [ a 1 , ⋯ , a n ] {\displaystyle A=[\mathbf {a} _{1},\cdots ,\mathbf {a} _{n}]} A=[\mathbf{a}_1, \cdots, \mathbf{a}_n] , with inner product ⟨ v , w ⟩ = v ⊤ w {\displaystyle \langle \mathbf {v} ,\mathbf {w} \rangle =\mathbf {v} ^{\top }\mathbf {w} } \langle\mathbf{v},\mathbf{w}\rangle = \mathbf{v}^\top \mathbf{w} (or ⟨ v , w ⟩ = v ∗ w {\displaystyle \langle \mathbf {v} ,\mathbf {w} \rangle =\mathbf {v} ^{*}\mathbf {w} } \langle\mathbf{v},\mathbf{w}\rangle = \mathbf{v}^* \mathbf{w} for the complex case).

Define the projection :

    p r o j u a = ⟨ u , a ⟩ ⟨ u , u ⟩ u {\displaystyle \mathrm {proj} _{\mathbf {u} }\mathbf {a} ={\frac {\left\langle \mathbf {u} ,\mathbf {a} \right\rangle }{\left\langle \mathbf {u} ,\mathbf {u} \right\rangle }}{\mathbf {u} }} {\displaystyle \mathrm {proj} _{\mathbf {u} }\mathbf {a} ={\frac {\left\langle \mathbf {u} ,\mathbf {a} \right\rangle }{\left\langle \mathbf {u} ,\mathbf {u} \right\rangle }}{\mathbf {u} }} 

then:

    u 1 = a 1 , e 1 = u 1 ‖ u 1 ‖ u 2 = a 2 − p r o j u 1 a 2 , e 2 = u 2 ‖ u 2 ‖ u 3 = a 3 − p r o j u 1 a 3 − p r o j u 2 a 3 , e 3 = u 3 ‖ u 3 ‖ ⋮ ⋮ u k = a k − ∑ j = 1 k − 1 p r o j u j a k , e k = u k ‖ u k ‖ {\displaystyle {\begin{aligned}\mathbf {u} _{1}&=\mathbf {a} _{1},&\mathbf {e} _{1}&={\mathbf {u} _{1} \over \|\mathbf {u} _{1}\|}\\\mathbf {u} _{2}&=\mathbf {a} _{2}-\mathrm {proj} _{\mathbf {u} _{1}}\,\mathbf {a} _{2},&\mathbf {e} _{2}&={\mathbf {u} _{2} \over \|\mathbf {u} _{2}\|}\\\mathbf {u} _{3}&=\mathbf {a} _{3}-\mathrm {proj} _{\mathbf {u} _{1}}\,\mathbf {a} _{3}-\mathrm {proj} _{\mathbf {u} _{2}}\,\mathbf {a} _{3},&\mathbf {e} _{3}&={\mathbf {u} _{3} \over \|\mathbf {u} _{3}\|}\\&\vdots &&\vdots \\\mathbf {u} _{k}&=\mathbf {a} _{k}-\sum _{j=1}^{k-1}\mathrm {proj} _{\mathbf {u} _{j}}\,\mathbf {a} _{k},&\mathbf {e} _{k}&={\mathbf {u} _{k} \over \|\mathbf {u} _{k}\|}\end{aligned}}} \begin{align} \mathbf{u}_1 &= \mathbf{a}_1, & \mathbf{e}_1 &= {\mathbf{u}_1 \over \|\mathbf{u}_1\|} \\ \mathbf{u}_2 &= \mathbf{a}_2-\mathrm{proj}_{\mathbf{u}_1}\,\mathbf{a}_2, & \mathbf{e}_2 &= {\mathbf{u}_2 \over \|\mathbf{u}_2\|} \\ \mathbf{u}_3 &= \mathbf{a}_3-\mathrm{proj}_{\mathbf{u}_1}\,\mathbf{a}_3-\mathrm{proj}_{\mathbf{u}_2}\,\mathbf{a}_3, & \mathbf{e}_3 &= {\mathbf{u}_3 \over \|\mathbf{u}_3\|} \\ & \vdots &&\vdots \\ \mathbf{u}_k &= \mathbf{a}_k-\sum_{j=1}^{k-1}\mathrm{proj}_{\mathbf{u}_j}\,\mathbf{a}_k, &\mathbf{e}_k &= {\mathbf{u}_k\over\|\mathbf{u}_k\|} \end{align} 

We can now express the a i {\displaystyle \mathbf {a} _{i}} \mathbf{a}_i s over our newly computed orthonormal basis:

    a 1 = ⟨ e 1 , a 1 ⟩ e 1 a 2 = ⟨ e 1 , a 2 ⟩ e 1 + ⟨ e 2 , a 2 ⟩ e 2 a 3 = ⟨ e 1 , a 3 ⟩ e 1 + ⟨ e 2 , a 3 ⟩ e 2 + ⟨ e 3 , a 3 ⟩ e 3 ⋮ a k = ∑ j = 1 k ⟨ e j , a k ⟩ e j {\displaystyle {\begin{aligned}\mathbf {a} _{1}&=\langle \mathbf {e} _{1},\mathbf {a} _{1}\rangle \mathbf {e} _{1}\\\mathbf {a} _{2}&=\langle \mathbf {e} _{1},\mathbf {a} _{2}\rangle \mathbf {e} _{1}+\langle \mathbf {e} _{2},\mathbf {a} _{2}\rangle \mathbf {e} _{2}\\\mathbf {a} _{3}&=\langle \mathbf {e} _{1},\mathbf {a} _{3}\rangle \mathbf {e} _{1}+\langle \mathbf {e} _{2},\mathbf {a} _{3}\rangle \mathbf {e} _{2}+\langle \mathbf {e} _{3},\mathbf {a} _{3}\rangle \mathbf {e} _{3}\\&\vdots \\\mathbf {a} _{k}&=\sum _{j=1}^{k}\langle \mathbf {e} _{j},\mathbf {a} _{k}\rangle \mathbf {e} _{j}\end{aligned}}} \begin{align} \mathbf{a}_1 &= \langle\mathbf{e}_1,\mathbf{a}_1 \rangle \mathbf{e}_1 \\ \mathbf{a}_2 &= \langle\mathbf{e}_1,\mathbf{a}_2 \rangle \mathbf{e}_1 + \langle\mathbf{e}_2,\mathbf{a}_2 \rangle \mathbf{e}_2 \\ \mathbf{a}_3 &= \langle\mathbf{e}_1,\mathbf{a}_3 \rangle \mathbf{e}_1 + \langle\mathbf{e}_2,\mathbf{a}_3 \rangle \mathbf{e}_2 + \langle\mathbf{e}_3,\mathbf{a}_3 \rangle \mathbf{e}_3 \\ &\vdots \\ \mathbf{a}_k &= \sum_{j=1}^{k} \langle \mathbf{e}_j, \mathbf{a}_k \rangle \mathbf{e}_j \end{align} 

where ⟨ e i , a i ⟩ = ‖ u i ‖ {\displaystyle \langle \mathbf {e} _{i},\mathbf {a} _{i}\rangle =\|\mathbf {u} _{i}\|} \langle\mathbf{e}_i,\mathbf{a}_i \rangle = \|\mathbf{u}_i\| . This can be written in matrix form:

    A = Q R {\displaystyle A=QR} A = Q R 

where:

    Q = [ e 1 , ⋯ , e n ] {\displaystyle Q=\left[\mathbf {e} _{1},\cdots ,\mathbf {e} _{n}\right]} {\displaystyle Q=\left[\mathbf {e} _{1},\cdots ,\mathbf {e} _{n}\right]} 

and

    R = ( ⟨ e 1 , a 1 ⟩ ⟨ e 1 , a 2 ⟩ ⟨ e 1 , a 3 ⟩ … 0 ⟨ e 2 , a 2 ⟩ ⟨ e 2 , a 3 ⟩ … 0 0 ⟨ e 3 , a 3 ⟩ … ⋮ ⋮ ⋮ ⋱ ) . {\displaystyle R={\begin{pmatrix}\langle \mathbf {e} _{1},\mathbf {a} _{1}\rangle &\langle \mathbf {e} _{1},\mathbf {a} _{2}\rangle &\langle \mathbf {e} _{1},\mathbf {a} _{3}\rangle &\ldots \\0&\langle \mathbf {e} _{2},\mathbf {a} _{2}\rangle &\langle \mathbf {e} _{2},\mathbf {a} _{3}\rangle &\ldots \\0&0&\langle \mathbf {e} _{3},\mathbf {a} _{3}\rangle &\ldots \\\vdots &\vdots &\vdots &\ddots \end{pmatrix}}.} {\displaystyle R={\begin{pmatrix}\langle \mathbf {e} _{1},\mathbf {a} _{1}\rangle &\langle \mathbf {e} _{1},\mathbf {a} _{2}\rangle &\langle \mathbf {e} _{1},\mathbf {a} _{3}\rangle &\ldots \\0&\langle \mathbf {e} _{2},\mathbf {a} _{2}\rangle &\langle \mathbf {e} _{2},\mathbf {a} _{3}\rangle &\ldots \\0&0&\langle \mathbf {e} _{3},\mathbf {a} _{3}\rangle &\ldots \\\vdots &\vdots &\vdots &\ddots \end{pmatrix}}.} 

Example [ edit ]

Consider the decomposition of

    A = ( 12 − 51 4 6 167 − 68 − 4 24 − 41 ) . {\displaystyle A={\begin{pmatrix}12&-51&4\\6&167&-68\\-4&24&-41\end{pmatrix}}.} A = \begin{pmatrix} 12 & -51 & 4 \\ 6 & 167 & -68 \\ -4 & 24 & -41 \end{pmatrix} . 

Recall that an orthonormal matrix Q {\displaystyle Q} Q has the property

    Q T Q = I . {\displaystyle {\begin{matrix}Q^{T}\,Q=I.\end{matrix}}} \begin{matrix} Q^T \,Q = I. \end{matrix} 

Then, we can calculate Q {\displaystyle Q} Q by means of Gram–Schmidt as follows:

    U = ( u 1 u 2 u 3 ) = ( 12 − 69 − 58 / 5 6 158 6 / 5 − 4 30 − 33 ) ; {\displaystyle U={\begin{pmatrix}\mathbf {u} _{1}&\mathbf {u} _{2}&\mathbf {u} _{3}\end{pmatrix}}={\begin{pmatrix}12&-69&-58/5\\6&158&6/5\\-4&30&-33\end{pmatrix}};} U = \begin{pmatrix} \mathbf u_1 & \mathbf u_2 & \mathbf u_3 \end{pmatrix} = \begin{pmatrix} 12 & -69 & -58/5 \\ 6 & 158 & 6/5 \\ -4 & 30 & -33 \end{pmatrix}; 
    Q = ( u 1 ‖ u 1 ‖ u 2 ‖ u 2 ‖ u 3 ‖ u 3 ‖ ) = ( 6 / 7 − 69 / 175 − 58 / 175 3 / 7 158 / 175 6 / 175 − 2 / 7 6 / 35 − 33 / 35 ) . {\displaystyle Q={\begin{pmatrix}{\frac {\mathbf {u} _{1}}{\|\mathbf {u} _{1}\|}}&{\frac {\mathbf {u} _{2}}{\|\mathbf {u} _{2}\|}}&{\frac {\mathbf {u} _{3}}{\|\mathbf {u} _{3}\|}}\end{pmatrix}}={\begin{pmatrix}6/7&-69/175&-58/175\\3/7&158/175&6/175\\-2/7&6/35&-33/35\end{pmatrix}}.} Q = \begin{pmatrix} \frac{\mathbf u_1}{\|\mathbf u_1\|} & \frac{\mathbf u_2}{\|\mathbf u_2\|} & \frac{\mathbf u_3}{\|\mathbf u_3\|} \end{pmatrix} = \begin{pmatrix} 6/7 & -69/175 & -58/175 \\ 3/7 & 158/175 & 6/175 \\ -2/7 & 6/35 & -33/35 \end{pmatrix}. 

Thus, we have

    Q T A = Q T Q R = R ; {\displaystyle {\begin{matrix}Q^{T}A=Q^{T}Q\,R=R;\end{matrix}}} \begin{matrix} Q^{T} A = Q^{T}Q\,R = R; \end{matrix} 
    R = Q T A = ( 14 21 − 14 0 175 − 70 0 0 35 ) . {\displaystyle {\begin{matrix}R=Q^{T}A=\end{matrix}}{\begin{pmatrix}14&21&-14\\0&175&-70\\0&0&35\end{pmatrix}}.} {\displaystyle {\begin{matrix}R=Q^{T}A=\end{matrix}}{\begin{pmatrix}14&21&-14\\0&175&-70\\0&0&35\end{pmatrix}}.} 

Relation to RQ decomposition [ edit ]

The RQ decomposition transforms a matrix A into the product of an upper triangular matrix R (also known as right-triangular) and an orthogonal matrix Q . The only difference from QR decomposition is the order of these matrices.

QR decomposition is Gram–Schmidt orthogonalization of columns of A , started from the first column.

RQ decomposition is Gram–Schmidt orthogonalization of rows of A , started from the last row.
Advantages and disadvantages [ edit ]

The Gram-Schmidt process is inherently numerically unstable. While the application of the projections has an appealing geometric analogy to orthogonalization, the orthogonalization itself is prone to numerical error. A significant advantage however is the ease of implementation, which makes this a useful algorithm to use for prototyping if a pre-built linear algebra library is unavailable.
Using Householder reflections [ edit ]
Householder reflection for QR-decomposition: The goal is to find a linear transformation that changes the vector x {\displaystyle x} x into a vector of same length which is collinear to e 1 {\displaystyle e_{1}} e_{1} . We could use an orthogonal projection (Gram-Schmidt) but this will be numerically unstable if the vectors x {\displaystyle x} x and e 1 {\displaystyle e_{1}} e_{1} are close to orthogonal. Instead, the Householder reflection reflects through the dotted line (chosen to bisect the angle between x {\displaystyle x} x and e 1 {\displaystyle e_{1}} e_{1} ). The maximum angle with this transform is 45 degrees.

A Householder reflection (or Householder transformation ) is a transformation that takes a vector and reflects it about some plane or hyperplane . We can use this operation to calculate the QR factorization of an m -by- n matrix A {\displaystyle A} A with m  ≥  n .

Q can be used to reflect a vector in such a way that all coordinates but one disappear.

Let x {\displaystyle \mathbf {x} } \mathbf {x} be an arbitrary real m -dimensional column vector of A {\displaystyle A} A such that ‖ x ‖ = | α | {\displaystyle \|\mathbf {x} \|=|\alpha |} \|\mathbf{x}\| = |\alpha| for a scalar α . If the algorithm is implemented using floating-point arithmetic , then α should get the opposite sign as the k -th coordinate of x {\displaystyle \mathbf {x} } \mathbf {x} , where x k {\displaystyle x_{k}} x_{k} is to be the pivot coordinate after which all entries are 0 in matrix A' s final upper triangular form, to avoid loss of significance . In the complex case, set

    α = − e i arg ⁡ x k ‖ x ‖ {\displaystyle \alpha =-e^{i\arg x_{k}}\|\mathbf {x} \|} {\displaystyle \alpha =-e^{i\arg x_{k}}\|\mathbf {x} \|} 

( Stoer & Bulirsch 2002 , p. 225) and substitute transposition by conjugate transposition in the construction of Q below.

Then, where e 1 {\displaystyle \mathbf {e} _{1}} \mathbf {e} _{1} is the vector (1,0,...,0) T , ||·|| is the Euclidean norm and I {\displaystyle I} I is an m -by- m identity matrix, set

    u = x − α e 1 , {\displaystyle \mathbf {u} =\mathbf {x} -\alpha \mathbf {e} _{1},} \mathbf{u} = \mathbf{x} - \alpha\mathbf{e}_1, 
    v = u ‖ u ‖ , {\displaystyle \mathbf {v} ={\mathbf {u} \over \|\mathbf {u} \|},} \mathbf{v} = {\mathbf{u}\over\|\mathbf{u}\|}, 
    Q = I − 2 v v T . {\displaystyle Q=I-2\mathbf {v} \mathbf {v} ^{T}.} Q = I - 2 \mathbf{v}\mathbf{v}^T. 

Or, if A {\displaystyle A} A is complex

    Q = I − 2 v v H . {\displaystyle Q=I-2\mathbf {v} \mathbf {v} ^{H}.} {\displaystyle Q=I-2\mathbf {v} \mathbf {v} ^{H}.} 

Q {\displaystyle Q} Q is an m -by- m Householder matrix and

    Q x = ( α , 0 , ⋯ , 0 ) T . {\displaystyle Q\mathbf {x} =(\alpha ,0,\cdots ,0)^{T}.\,} Q\mathbf{x} = (\alpha, 0, \cdots, 0)^T.\, 

This can be used to gradually transform an m -by- n matrix A to upper triangular form. First, we multiply A with the Householder matrix Q 1 we obtain when we choose the first matrix column for x . This results in a matrix Q 1 A with zeros in the left column (except for the first row).

    Q 1 A = [ α 1 ⋆ … ⋆ 0 ⋮ A ′ 0 ] {\displaystyle Q_{1}A={\begin{bmatrix}\alpha _{1}&\star &\dots &\star \\0&&&\\\vdots &&A'&\\0&&&\end{bmatrix}}} Q_1A = \begin{bmatrix} \alpha_1&\star&\dots&\star\\ 0 & & & \\ \vdots & & A' & \\ 0 & & & \end{bmatrix} 

This can be repeated for A ′ (obtained from Q 1 A by deleting the first row and first column), resulting in a Householder matrix Q ′ 2 . Note that Q ′ 2 is smaller than Q 1 . Since we want it really to operate on Q 1 A instead of A ′ we need to expand it to the upper left, filling in a 1, or in general:

    Q k = ( I k − 1 0 0 Q k ′ ) . {\displaystyle Q_{k}={\begin{pmatrix}I_{k-1}&0\\0&Q_{k}'\end{pmatrix}}.} Q_k = \begin{pmatrix} I_{k-1} & 0\\ 0 & Q_k'\end{pmatrix}. 

After t {\displaystyle t} t iterations of this process, t = min ( m − 1 , n ) {\displaystyle t=\min(m-1,n)} t = \min(m-1, n) ,

    R = Q t ⋯ Q 2 Q 1 A {\displaystyle R=Q_{t}\cdots Q_{2}Q_{1}A} R = Q_t \cdots Q_2Q_1A 

is an upper triangular matrix. So, with

    Q = Q 1 T Q 2 T ⋯ Q t T , {\displaystyle Q=Q_{1}^{T}Q_{2}^{T}\cdots Q_{t}^{T},} Q = Q_1^T Q_2^T \cdots Q_t^T, 

A = Q R {\displaystyle A=QR} A = QR is a QR decomposition of A {\displaystyle A} A .

This method has greater numerical stability than the Gram–Schmidt method above.

The following table gives the number of operations in the k -th step of the QR-decomposition by the Householder transformation, assuming a square matrix with size n .
Operation 	Number of operations in the k -th step
multiplications 	2 ( n − k + 1 ) 2 {\displaystyle 2(n-k+1)^{2}} 2(n-k+1)^2
additions 	( n − k + 1 ) 2 + ( n − k + 1 ) ( n − k ) + 2 {\displaystyle (n-k+1)^{2}+(n-k+1)(n-k)+2} (n-k+1)^2+(n-k+1)(n-k)+2
division 	1 {\displaystyle 1} 1
square root 	1 {\displaystyle 1} 1

Summing these numbers over the n  − 1 steps (for a square matrix of size n ), the complexity of the algorithm (in terms of floating point multiplications) is given by

    2 3 n 3 + n 2 + 1 3 n − 2 = O ( n 3 ) . {\displaystyle {\frac {2}{3}}n^{3}+n^{2}+{\frac {1}{3}}n-2=O(n^{3}).} \frac{2}{3}n^3+n^2+\frac{1}{3}n-2=O(n^3). 

Example [ edit ]

Let us calculate the decomposition of

    A = ( 12 − 51 4 6 167 − 68 − 4 24 − 41 ) . {\displaystyle A={\begin{pmatrix}12&-51&4\\6&167&-68\\-4&24&-41\end{pmatrix}}.} A = \begin{pmatrix} 12 & -51 & 4 \\ 6 & 167 & -68 \\ -4 & 24 & -41 \end{pmatrix}. 

First, we need to find a reflection that transforms the first column of matrix A , vector a 1 = ( 12 , 6 , − 4 ) T {\displaystyle \mathbf {a} _{1}=(12,6,-4)^{T}} \mathbf{a}_1 = (12, 6, -4)^T , into ‖ a 1 ‖ e 1 = ( 14 , 0 , 0 ) T . {\displaystyle \|\mathbf {a} _{1}\|\;\mathbf {e} _{1}=(14,0,0)^{T}.} {\displaystyle \|\mathbf {a} _{1}\|\;\mathbf {e} _{1}=(14,0,0)^{T}.}

Now,

    u = x − α e 1 , {\displaystyle \mathbf {u} =\mathbf {x} -\alpha \mathbf {e} _{1},} \mathbf{u} = \mathbf{x} - \alpha\mathbf{e}_1, 

and

    v = u ‖ u ‖ . {\displaystyle \mathbf {v} ={\mathbf {u} \over \|\mathbf {u} \|}.} \mathbf{v} = {\mathbf{u}\over\|\mathbf{u}\|}. 

Here,

    α = 14 {\displaystyle \alpha =14} {\displaystyle \alpha =14} and x = a 1 = ( 12 , 6 , − 4 ) T {\displaystyle \mathbf {x} =\mathbf {a} _{1}=(12,6,-4)^{T}} \mathbf{x} = \mathbf{a}_1 = (12, 6, -4)^T 

Therefore

    u = ( − 2 , 6 , − 4 ) T = ( 2 ) ( − 1 , 3 , − 2 ) T {\displaystyle \mathbf {u} =(-2,6,-4)^{T}=({2})(-1,3,-2)^{T}} \mathbf{u} = (-2, 6, -4)^T=({2})(-1, 3, -2)^T and v = 1 14 ( − 1 , 3 , − 2 ) T {\displaystyle \mathbf {v} ={1 \over {\sqrt {14}}}(-1,3,-2)^{T}} \mathbf{v} = {1 \over \sqrt{14}}(-1, 3, -2)^T , and then
    Q 1 = I − 2 14 14 ( − 1 3 − 2 ) ( − 1 3 − 2 ) {\displaystyle Q_{1}=I-{2 \over {\sqrt {14}}{\sqrt {14}}}{\begin{pmatrix}-1\\3\\-2\end{pmatrix}}{\begin{pmatrix}-1&3&-2\end{pmatrix}}} Q_1 = I - {2 \over \sqrt{14} \sqrt{14}} \begin{pmatrix} -1 \\ 3 \\ -2 \end{pmatrix}\begin{pmatrix} -1 & 3 & -2 \end{pmatrix} 
    = I − 1 7 ( 1 − 3 2 − 3 9 − 6 2 − 6 4 ) {\displaystyle =I-{1 \over 7}{\begin{pmatrix}1&-3&2\\-3&9&-6\\2&-6&4\end{pmatrix}}} = I - {1 \over 7}\begin{pmatrix} 1 & -3 & 2 \\ -3 & 9 & -6 \\ 2 & -6 & 4 \end{pmatrix} 
    = ( 6 / 7 3 / 7 − 2 / 7 3 / 7 − 2 / 7 6 / 7 − 2 / 7 6 / 7 3 / 7 ) . {\displaystyle ={\begin{pmatrix}6/7&3/7&-2/7\\3/7&-2/7&6/7\\-2/7&6/7&3/7\\\end{pmatrix}}.} = \begin{pmatrix} 6/7 & 3/7 & -2/7 \\ 3/7 &-2/7 & 6/7 \\ -2/7 & 6/7 & 3/7 \\ \end{pmatrix}. 

Now observe:

    Q 1 A = ( 14 21 − 14 0 − 49 − 14 0 168 − 77 ) , {\displaystyle Q_{1}A={\begin{pmatrix}14&21&-14\\0&-49&-14\\0&168&-77\end{pmatrix}},} Q_1A = \begin{pmatrix} 14 & 21 & -14 \\ 0 & -49 & -14 \\ 0 & 168 & -77 \end{pmatrix}, 

so we already have almost a triangular matrix. We only need to zero the (3, 2) entry.

Take the (1, 1) minor , and then apply the process again to

    A ′ = M 11 = ( − 49 − 14 168 − 77 ) . {\displaystyle A'=M_{11}={\begin{pmatrix}-49&-14\\168&-77\end{pmatrix}}.} A' = M_{11} = \begin{pmatrix} -49 & -14 \\ 168 & -77 \end{pmatrix}. 

By the same method as above, we obtain the matrix of the Householder transformation

    Q 2 = ( 1 0 0 0 − 7 / 25 24 / 25 0 24 / 25 7 / 25 ) {\displaystyle Q_{2}={\begin{pmatrix}1&0&0\\0&-7/25&24/25\\0&24/25&7/25\end{pmatrix}}} Q_2 = \begin{pmatrix} 1 & 0 & 0 \\ 0 & -7/25 & 24/25 \\ 0 & 24/25 & 7/25 \end{pmatrix} 

after performing a direct sum with 1 to make sure the next step in the process works properly.

Now, we find

    Q = Q 1 T Q 2 T = ( 6 / 7 − 69 / 175 58 / 175 3 / 7 158 / 175 − 6 / 175 − 2 / 7 6 / 35 33 / 35 ) {\displaystyle Q=Q_{1}^{T}Q_{2}^{T}={\begin{pmatrix}6/7&-69/175&58/175\\3/7&158/175&-6/175\\-2/7&6/35&33/35\end{pmatrix}}} Q=Q_1^T Q_2^T=\begin{pmatrix} 6/7 & -69/175 & 58/175 \\ 3/7 & 158/175 & -6/175 \\ -2/7 & 6/35 & 33/35 \end{pmatrix} 

Or, to four decimal digits,

    Q = Q 1 T Q 2 T = ( 0.8571 − 0.3943 0.3314 0.4286 0.9029 − 0.0343 − 0.2857 0.1714 0.9429 ) {\displaystyle Q=Q_{1}^{T}Q_{2}^{T}={\begin{pmatrix}0.8571&-0.3943&0.3314\\0.4286&0.9029&-0.0343\\-0.2857&0.1714&0.9429\end{pmatrix}}} Q=Q_1^T Q_2^T=\begin{pmatrix} 0.8571 & -0.3943 & 0.3314 \\ 0.4286 & 0.9029 & -0.0343 \\ -0.2857 & 0.1714 & 0.9429 \end{pmatrix} 

    R = Q 2 Q 1 A = Q T A = ( 14 21 − 14 0 175 − 70 0 0 − 35 ) . {\displaystyle R=Q_{2}Q_{1}A=Q^{T}A={\begin{pmatrix}14&21&-14\\0&175&-70\\0&0&-35\end{pmatrix}}.} R=Q_2Q_1A=Q^T A=\begin{pmatrix} 14 & 21 & -14 \\ 0 & 175 & -70 \\ 0 & 0 & -35 \end{pmatrix}. 

The matrix Q is orthogonal and R is upper triangular, so A = QR is the required QR-decomposition.
Advantages and disadvantages [ edit ]

The use of Householder transformations is inherently the most simple of the numerically stable QR decomposition algorithms due to the use of reflections as the mechanism for producing zeroes in the R matrix. However, the Householder reflection algorithm is bandwidth heavy and not parallelisable, as every reflection that produces a new zero element changes the entirety of both Q and R matrices.
Using Givens rotations [ edit ]

QR decompositions can also be computed with a series of Givens rotations . Each rotation zeroes an element in the subdiagonal of the matrix, forming the R matrix. The concatenation of all the Givens rotations forms the orthogonal Q matrix.

In practice, Givens rotations are not actually performed by building a whole matrix and doing a matrix multiplication. A Givens rotation procedure is used instead which does the equivalent of the sparse Givens matrix multiplication, without the extra work of handling the sparse elements. The Givens rotation procedure is useful in situations where only a relatively few off diagonal elements need to be zeroed, and is more easily parallelized than Householder transformations .
Example [ edit ]

Let us calculate the decomposition of

    A = ( 12 − 51 4 6 167 − 68 − 4 24 − 41 ) . {\displaystyle A={\begin{pmatrix}12&-51&4\\6&167&-68\\-4&24&-41\end{pmatrix}}.} A = \begin{pmatrix} 12 & -51 & 4 \\ 6 & 167 & -68 \\ -4 & 24 & -41 \end{pmatrix}. 

First, we need to form a rotation matrix that will zero the lowermost left element, a 31 = − 4 {\displaystyle \mathbf {a} _{31}=-4} \mathbf{a}_{31} = -4 . We form this matrix using the Givens rotation method, and call the matrix G 1 {\displaystyle G_{1}} G_{1} . We will first rotate the vector ( 12 , − 4 ) {\displaystyle (12,-4)} {\displaystyle (12,-4)} , to point along the X axis. This vector has an angle θ = arctan ⁡ ( − ( − 4 ) 12 ) {\displaystyle \theta =\arctan \left({-(-4) \over 12}\right)} {\displaystyle \theta =\arctan \left({-(-4) \over 12}\right)} . We create the orthogonal Givens rotation matrix, G 1 {\displaystyle G_{1}} G_{1} :

    G 1 = ( cos ⁡ ( θ ) 0 − sin ⁡ ( θ ) 0 1 0 sin ⁡ ( θ ) 0 cos ⁡ ( θ ) ) {\displaystyle G_{1}={\begin{pmatrix}\cos(\theta )&0&-\sin(\theta )\\0&1&0\\\sin(\theta )&0&\cos(\theta )\end{pmatrix}}} {\displaystyle G_{1}={\begin{pmatrix}\cos(\theta )&0&-\sin(\theta )\\0&1&0\\\sin(\theta )&0&\cos(\theta )\end{pmatrix}}} 
    ≈ ( 0.94868 0 − 0.31622 0 1 0 0.31622 0 0.94868 ) {\displaystyle \approx {\begin{pmatrix}0.94868&0&-0.31622\\0&1&0\\0.31622&0&0.94868\end{pmatrix}}} {\displaystyle \approx {\begin{pmatrix}0.94868&0&-0.31622\\0&1&0\\0.31622&0&0.94868\end{pmatrix}}} 

And the result of G 1 A {\displaystyle G_{1}A} G_1A now has a zero in the a 31 {\displaystyle \mathbf {a} _{31}} \mathbf{a}_{31} element.

    G 1 A ≈ ( 12.64911 − 55.97231 16.76007 6 167 − 68 0 6.64078 − 37.6311 ) {\displaystyle G_{1}A\approx {\begin{pmatrix}12.64911&-55.97231&16.76007\\6&167&-68\\0&6.64078&-37.6311\end{pmatrix}}} {\displaystyle G_{1}A\approx {\begin{pmatrix}12.64911&-55.97231&16.76007\\6&167&-68\\0&6.64078&-37.6311\end{pmatrix}}} 

We can similarly form Givens matrices G 2 {\displaystyle G_{2}} G_{2} and G 3 {\displaystyle G_{3}} G_{3} , which will zero the sub-diagonal elements a 21 {\displaystyle a_{21}} a_{21} and a 32 {\displaystyle a_{32}} a_{32} , forming a triangular matrix R {\displaystyle R} R . The orthogonal matrix Q T {\displaystyle Q^{T}} Q^T is formed from the product of all the Givens matrices Q T = G 3 G 2 G 1 {\displaystyle Q^{T}=G_{3}G_{2}G_{1}} Q^T = G_3G_2G_1 . Thus, we have G 3 G 2 G 1 A = Q T A = R {\displaystyle G_{3}G_{2}G_{1}A=Q^{T}A=R} G_3G_2G_1A= Q^TA = R , and the QR decomposition is A = Q R {\displaystyle A=QR} A = QR .
Advantages and disadvantages [ edit ]

The QR decomposition via Givens rotations is the most involved to implement, as the ordering of the rows required to fully exploit the algorithm is not trivial to determine. However, it has a significant advantage in that each new zero element a i j {\displaystyle a_{ij}} a_{ij} affects only the row with the element to be zeroed (i) and a row above (j). This makes the Givens rotation algorithm more bandwidth efficient and parallelisable, in contrast to the Householder reflection technique.
Connection to a determinant or a product of eigenvalues [ edit ]

We can use QR decomposition to find the absolute value of the determinant of a square matrix. Suppose a matrix is decomposed as A = Q R {\displaystyle A=QR} A=QR . Then we have

    det ( A ) = det ( Q ) ⋅ det ( R ) . {\displaystyle \det(A)=\det(Q)\cdot \det(R).} \det(A)=\det(Q)\cdot\det(R). 

Since Q is unitary, | det ( Q ) | = 1 {\displaystyle |\det(Q)|=1} |\det(Q)|=1 . Thus,

    | det ( A ) | = | det ( R ) | = | ∏ i r i i | , {\displaystyle |\det(A)|=|\det(R)|={\Big |}\prod _{i}r_{ii}{\Big |},} |\det(A)|=|\det(R)|=\Big|\prod_{i} r_{ii}\Big|, 

where r i i {\displaystyle r_{ii}} r_{ii} are the entries on the diagonal of R .

Furthermore, because the determinant equals the product of the eigenvalues, we have

    | ∏ i r i i | = | ∏ i λ i | , {\displaystyle {\Big |}\prod _{i}r_{ii}{\Big |}={\Big |}\prod _{i}\lambda _{i}{\Big |},} \Big|\prod_{i} r_{ii}\Big|=\Big|\prod_{i} \lambda_{i}\Big|, 

where λ i {\displaystyle \lambda _{i}} \lambda_{i} are eigenvalues of A {\displaystyle A} A .

We can extend the above properties to non-square complex matrix A {\displaystyle A} A by introducing the definition of QR-decomposition for non-square complex matrix and replacing eigenvalues with singular values.

Suppose a QR decomposition for a non-square matrix A :

    A = Q ( R O ) , Q ∗ Q = I , {\displaystyle A=Q{\begin{pmatrix}R\\O\end{pmatrix}},\qquad Q^{*}Q=I,} A = Q \begin{pmatrix}R\\O\end{pmatrix}, \qquad Q^*Q = I, 

where O {\displaystyle O} O is a zero matrix and Q {\displaystyle Q} Q is a unitary matrix.

From the properties of SVD and determinant of matrix, we have

    | ∏ i r i i | = ∏ i σ i , {\displaystyle {\Big |}\prod _{i}r_{ii}{\Big |}=\prod _{i}\sigma _{i},} \Big|\prod_{i} r_{ii}\Big| = \prod_{i} \sigma_{i}, 

where σ i {\displaystyle \sigma _{i}} \sigma_{i} are singular values of A {\displaystyle A} A .

Note that the singular values of A {\displaystyle A} A and R {\displaystyle R} R are identical, although their complex eigenvalues may be different. However, if A is square, the following is true:

    ∏ i σ i = | ∏ i λ i | . {\displaystyle {\prod _{i}\sigma _{i}}={\Big |}{\prod _{i}\lambda _{i}}{\Big |}.} {\prod_{i} \sigma_{i}} = \Big|{\prod_{i} \lambda_{i}}\Big|. 

In conclusion, QR decomposition can be used efficiently to calculate the product of the eigenvalues or singular values of a matrix.
Column pivoting [ edit ]
[icon] 	
This section needs expansion . You can help by adding to it . (December 2009)

QR decomposition with column pivoting introduces a permutation matrix P :

    A P = Q R ⟺ A = Q R P T {\displaystyle AP=QR\quad \iff A=QRP^{T}} A P = Q R \quad \iff A = Q R P^T 

Column pivoting is useful when A is (nearly) rank deficient , or is suspected of being so. It can also improve numerical accuracy. P is usually chosen so that the diagonal elements of R are non-increasing: | r 11 | ≥ | r 22 | ≥ … ≥ | r n n | {\displaystyle |r_{11}|\geq |r_{22}|\geq \ldots \geq |r_{nn}|} |r_{11}| \ge |r_{22}| \ge \ldots \ge |r_{nn}| . This can be used to find the (numerical) rank of A at lower computational cost than a singular value decomposition , forming the basis of so-called rank-revealing QR algorithms .
Using for solution to linear inverse problems [ edit ]

Compared to the direct matrix inverse, inverse solutions using QR decomposition are more numerically stable as evidenced by their reduced condition numbers [Parker, Geophysical Inverse Theory, Ch1.13].

To solve the underdetermined ( m < n {\displaystyle m<n} m < n ) linear problem A x = b {\displaystyle Ax=b} Ax=b where the matrix A has dimensions m × n {\displaystyle m\times n} m\times n and rank m {\displaystyle m} m , first find the QR factorization of the transpose of A: A T = Q R {\displaystyle A^{T}=QR} A^T=QR , where Q is an orthogonal matrix (i.e. Q T = Q − 1 {\displaystyle Q^{T}=Q^{-1}} Q^T=Q^{-1} ), and R has a special form: R = [ R 1 0 ] {\displaystyle R={\begin{bmatrix}R_{1}\\0\end{bmatrix}}} R=\begin{bmatrix} R_1 \\ 0\end{bmatrix} . Here R 1 {\displaystyle R_{1}} R_{1} is a square m × m {\displaystyle m\times m} m\times m right triangular matrix, and the zero matrix has dimension ( n − m ) × m {\displaystyle (n-m)\times m} (n-m) \times m . After some algebra, it can be shown that a solution to the inverse problem can be expressed as: x = Q [ ( R 1 T ) − 1 b 0 ] {\displaystyle x=Q{\begin{bmatrix}(R_{1}^{T})^{-1}b\\0\end{bmatrix}}} x = Q \begin{bmatrix} (R_1^T)^{-1}b \\ 0 \end{bmatrix} where one may either find R 1 − 1 {\displaystyle R_{1}^{-1}} R_1^{-1} by Gaussian elimination or compute ( R 1 T ) − 1 b {\displaystyle (R_{1}^{T})^{-1}b} (R_1^T)^{-1} b directly by forward substitution . The latter technique enjoys greater numerical accuracy and lower computations.

To find a solution, x ^ {\displaystyle {\hat {x}}} {\hat {x}} , to the overdetermined ( m ≥ n {\displaystyle m\geq n} m \geq n ) problem A x = b {\displaystyle Ax=b} Ax=b which minimizes the norm ‖ A x ^ − b ‖ {\displaystyle \|A{\hat {x}}-b\|} \|A \hat x-b\| , first find the QR factorization of A: A = Q R {\displaystyle A=QR} A=QR . The solution can then be expressed as x ^ = R 1 − 1 ( Q 1 T b ) {\displaystyle {\hat {x}}=R_{1}^{-1}(Q_{1}^{T}b)} \hat x = R_1^{-1} (Q_1^T b) , where Q 1 {\displaystyle Q_{1}} Q_{1} is an m × n {\displaystyle m\times n} m\times n matrix containing the first n {\displaystyle n} n columns of the full orthonormal basis Q {\displaystyle Q} Q and where R 1 {\displaystyle R_{1}} R_{1} is as before. Equivalent to the underdetermined case, back substitution can be used to quickly and accurately find this x ^ {\displaystyle {\hat {x}}} {\hat {x}} without explicitly inverting R 1 {\displaystyle R_{1}} R_{1} . ( Q 1 {\displaystyle Q_{1}} Q_{1} and R 1 {\displaystyle R_{1}} R_{1} are often provided by numerical libraries as an "economic" QR decomposition.)
Generalizations [ edit ]

Iwasawa decomposition generalizes QR decomposition to semisimple Lie groups.
See also [ edit ]

    Polar decomposition
    Eigenvalue decomposition
    Spectral decomposition
    LU decomposition
    Singular value decomposition

References [ edit ]

    ^ Jump up to: a b c L. N. Trefethen and D. Bau, Numerical Linear Algebra (SIAM, 1997).

Further reading [ edit ]

    Golub, Gene H. ; Van Loan, Charles F. (1996), Matrix Computations (3rd ed.), Johns Hopkins, ISBN   978-0-8018-5414-9   .
    Horn, Roger A.; Johnson, Charles R. (1985), Matrix Analysis , Cambridge University Press, ISBN   0-521-38632-2   . Section 2.8.
    Press, WH; Teukolsky, SA; Vetterling, WT; Flannery, BP (2007), "Section 2.10. QR Decomposition" , Numerical Recipes: The Art of Scientific Computing (3rd ed.), New York: Cambridge University Press, ISBN   978-0-521-88068-8  
    Stoer, Josef; Bulirsch, Roland (2002), Introduction to Numerical Analysis (3rd ed.), Springer, ISBN   0-387-95452-X   .

External links [ edit ]

    Online Matrix Calculator Performs QR decomposition of matrices.
    LAPACK users manual gives details of subroutines to calculate the QR decomposition
    Mathematica users manual gives details and examples of routines to calculate QR decomposition
    ALGLIB includes a partial port of the LAPACK to C++, C#, Delphi, etc.
    Eigen::QR Includes C++ implementation of QR decomposition.

    v
    t
    e

Numerical linear algebra
Key concepts 	

    Floating point
    Numerical stability

Problems 	

    Matrix multiplication ( algorithms )
    Matrix decompositions
    Linear equations
    Sparse problems

Hardware 	

    CPU cache
    TLB
    Cache-oblivious algorithm
    SIMD
    Multiprocessing

Software 	

    BLAS
    Specialized libraries
    General purpose software

Retrieved from " https://en.wikipedia.org/w/index.php?title=QR_decomposition&oldid=844163352 "
Categories :

    Matrix decompositions
    Numerical linear algebra

Hidden categories:

    Articles to be expanded from December 2009
    All articles to be expanded
    Articles using small message boxes

Navigation menu
Personal tools

    Not logged in
    Talk
    Contributions
    Create account
    Log in

Namespaces

    Article
    Talk

Variants

Views

    Read
    Edit
    View history

More

Search
Navigation

    Main page
    Contents
    Featured content
    Current events
    Random article
    Donate to Wikipedia
    Wikipedia store

Interaction

    Help
    About Wikipedia
    Community portal
    Recent changes
    Contact page

Tools

    What links here
    Related changes
    Upload file
    Special pages
    Permanent link
    Page information
    Wikidata item
    Cite this page

Print/export

    Create a book
    Download as PDF
    Printable version

Languages

    العربية
    Català
    Čeština
    Deutsch
    Español
    Esperanto
    فارسی
    Français
    한국어
    Italiano
    עברית
    Nederlands
    日本語
    Polski
    Română
    Русский
    Suomi
    Svenska
    Українська
    中文

Edit links

    This page was last edited on 3 June 2018, at 01:56  (UTC) .
    Text is available under the Creative Commons Attribution-ShareAlike License ; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc. , a non-profit organization.

    Privacy policy
    About Wikipedia
    Disclaimers
    Contact Wikipedia
    Developers
    Cookie statement
    Mobile view

    Wikimedia Foundation
    Powered by MediaWiki

