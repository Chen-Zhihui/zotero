
Skip to content
This repository

    Pull requests
    Issues
    Marketplace
    Explore

        New repository Import repository New gist New organization
        This repository
        New issue 
    @Chen-Zhihui
        Signed in as Chen-Zhihui
        Your profile
        Your stars
        Your gists
        Help
        Settings
        Sign out

Sign out

    Watch 16
    Notifications
    Not watching Be notified when participating or @mentioned. Watch
    Watching Be notified of all conversations. Unwatch
    Ignoring Never be notified. Stop ignoring
    Unstar 164
    Star 164
    Fork
    Where should we fork this repository?
    Loading
    82

MarekKowalski / FaceSwap
Code Issues 9 Pull requests 0 Projects 0 Wiki Insights
3D face swapping implemented in Python
3d-models face-alignment computer-vision face-swap optimization

    14 commits
    1 branch
    0 releases
    1 contributor
    MIT

    Python 100.0%

Python
Clone or download
Use SSH
Clone with HTTPS

Use Git or checkout with SVN using the web URL.
Use HTTPS
Clone with SSH

Use an SSH key and passphrase from account.
Download ZIP
Launching GitHub Desktop ...

If nothing happens, download GitHub Desktop and try again.

Go back
Launching GitHub Desktop ...

If nothing happens, download GitHub Desktop and try again.

Go back
Launching Xcode ...

If nothing happens, download Xcode and try again.

Go back
Launching Visual Studio ...

If nothing happens, download the GitHub extension for Visual Studio and try again.

Go back
Create new file
Upload files Find file
Branch: master
Switch branches/tags

    Branches
    Tags

master
Nothing to show
Nothing to show
New pull request
Latest commit 7e48bd4 Feb 15, 2018
@MarekKowalski
MarekKowalski Update README.md
Permalink
	Failed to load latest commit information.
	FaceSwap 	The input image is now downscaled before face detection which speeds … 	Oct 18, 2016
	data 	First commit 	Jun 19, 2016
	.gitignore 	Initial commit 	Jun 19, 2016
	FaceSwap.sln 	First commit 	Jun 19, 2016
	LICENSE 	Update LICENSE 	Oct 14, 2016
	README.md 	Update README.md 	Feb 15, 2018
	candide.npz 	First commit 	Jun 19, 2016
README.md
FaceSwap

FaceSwap is an app that I have originally created as an exercise for my students in "Mathematics in Multimedia" on the Warsaw University of Technology. The app is written in Python and uses face alignment, Gauss Newton optimization and image blending to swap the face of a person seen by the camera with a face of a person in a provided image.

You will find a short presentation the program's capabilities in the video below (click to go to YouTube): click to go to YouTube
How to use it

To start the program you will have to run a file named zad2.py (Polish for exercise 2), which will require:

    Python 2.7 (I recommend Anaconda)
    OpenCV (I used 2.4.13)
    Numpy
    dlib
    pygame
    PyOpenGL

You can download all of the libraries above either from PIP or from Christoph Gohlke's excellent website: http://www.lfd.uci.edu/~gohlke/pythonlibs/

You will also have to download the face alignment model from here: http://sourceforge.net/projects/dclib/files/dlib/v18.10/shape_predictor_68_face_landmarks.dat.bz2 and unpack it to the main project directory.
A faster and more stable version

A faster and more stable version of FaceSwap is available on Dropbox here . This new version is based on the Deep Alignment Network method, which is faster than the currently used method if ran on a GPU and provides more stable and more precise facial landmarks. Please see the GitHub repository of Deep Alignment Network for setup instructions.

I hope to find time to include this faster version in the repo code soon.
How it works

The general outline of the method is as follows:

First we take the input image (the image of a person we want to see on our own face) and find the face region and its landmarks. Once we have that we fit the 3D model to those landmarks (more on that later) the vertices of that model projected to the image space will be our texture coordinates.

Once that is finished and everything is initialized the camera starts capturing images. For each captured images the following steps are taken:

    The face region is detected and the facial landmarks are located.
    The 3D models is fitted to the located landmarks.
    The 3D models is rendered using pygame with the texture obtained during initialization.
    The image of the rendered model is blended with the image obtained from the camera using feathering (alpha blending) and very simple color correction.
    The final image is shown to the user.

The most crucial element of the entire process is the fitting of the 3D model. The model itself consists of:

    the 3D shape (set of vertices) of a neutral face,
    a number of blendshapes that can be added to the neutral face to produce mouth opening, eyebrow raising, etc.,
    a set of triplets of indices into the face shape that form the triangular mesh of the face,
    two sets of indices which establish correspondence between the landmarks found by the landmark localizer and the vertices of the 3D face shape.

The model is projected into the image space using the following equation:

equation

where s is the projected shape, a is the scaling parameter, P are the first two rows of a rotation matrix that rotates the 3D face shape, S_0 is the neutral face shape, w_1-n are the blendshape weights, S_1-n are the blendshapes, t is a 2D translation vector and n is the number of blendshapes.

The model fitting is accomplished by minimizing the difference between the projected shape and the localized landmarks. The minimization is accomplished with respect to the blendshape weights, scaling, rotation and translation, using the Gauss Newton method .
Licensing

The code is licensed under the MIT license, some of the data in the project is downloaded from 3rd party websites:

    brad pitt.jpg - https://en.wikipedia.org/wiki/Brad_Pitt#/media/File:Brad_Pitt_Fury_2014.jpg
    einstein.jpg - https://www.viewfoo.com/uploads/images/702_1433440837_albert-einstein.jpg
    jolie.jpg - http://cdni.condenast.co.uk/720x1080/a_c/Angelina-Jolie_glamour_2mar14_rex_b_720x1080.jpg
    hand.png - http://pngimg.com/upload/hands_PNG905.png
    eye.png - http://cache4.asset-cache.net/xd/521276062.jpg?v=1&c=IWSAsset&k=2&d=62CA815BFB1CE4807BD8B4D34504661CD6D7111452E48A17257DA6DB0BD6EA6DE35742C781328F67
    candide 3D face model source - http://www.icg.isy.liu.se/candide/

Contact

If need help or you found the app useful, do not hesitate to let me know.

Marek Kowalski m.kowalski@ire.pw.edu.pl , homepage: http://home.elka.pw.edu.pl/~mkowals6/

    © 2018 GitHub , Inc.
    Terms
    Privacy
    Security
    Status
    Help

    Contact GitHub
    API
    Training
    Shop
    Blog
    About

You can't perform that action at this time.
You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session.
Press h to open a hovercard with more details.
