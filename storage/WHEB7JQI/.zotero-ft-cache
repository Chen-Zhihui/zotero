
Skip to content
This repository

    Pull requests
    Issues
    Marketplace
    Explore

        New repository Import repository New gist New organization
        This repository
        New issue 
    @Chen-Zhihui
        Signed in as Chen-Zhihui
        Your profile
        Your stars
        Your gists
        Help
        Settings
        Sign out

Sign out

    Watch 12
    Notifications
    Not watching Be notified when participating or @mentioned. Watch
    Watching Be notified of all conversations. Unwatch
    Ignoring Never be notified. Stop ignoring
    Unstar 62
    Star 62
    Fork
    Where should we fork this repository?
    Loading
    17

FooBarWidget / multipart-parser
Code Issues 4 Pull requests 1 Projects 0 Wiki Insights
A C++ multipart MIME parser that isn't bloated with unnecessary stuff and doesn't depend on huge external libraries

    42 commits
    1 branch
    0 releases
    5 contributors
    MIT

    C++ 44.0%
    JavaScript 38.4%
    Ruby 17.6%

C++ JavaScript Ruby
Clone or download
Use SSH
Clone with HTTPS

Use Git or checkout with SVN using the web URL.
Use HTTPS
Clone with SSH

Use an SSH key and passphrase from account.
Download ZIP
Launching GitHub Desktop ...

If nothing happens, download GitHub Desktop and try again.

Go back
Launching GitHub Desktop ...

If nothing happens, download GitHub Desktop and try again.

Go back
Launching Xcode ...

If nothing happens, download Xcode and try again.

Go back
Launching Visual Studio ...

If nothing happens, download the GitHub extension for Visual Studio and try again.

Go back
Create new file
Upload files Find file
Branch: master
Switch branches/tags

    Branches
    Tags

master
Nothing to show
Nothing to show
New pull request
Fetching latest commit…
Cannot retrieve the latest commit at this time.
Permalink
	Failed to load latest commit information.
	.gitignore 	Improve benchmarks 	Jul 21, 2010
	LICENSE 	Add README and change license to MIT. 	Jul 7, 2010
	MultipartParser.h 	Added cstring header 	Oct 11, 2016
	MultipartReader.h 	Fix for issues with callback userData 	May 13, 2011
	README.markdown 	Update README 	Jul 7, 2010
	Rakefile 	Add Formidable benchmark 	Jul 21, 2010
	formidable_parser.js 	Add Formidable benchmark 	Jul 21, 2010
	input.txt 	Add more debugging facilities. 	Jul 7, 2010
	multipart.cpp 	Added cstring header 	Oct 11, 2016
	rack-parser.rb 	Add Formidable benchmark 	Jul 21, 2010
README.markdown
What is it?

An simple, efficient parser for multipart MIME messages, based on Formidable's parser.
Why?

MIME multipart messages are a total pain to parse because the grammar is so insane. Furthermore, the MIME specification is incredibly large. This has led to an army of equally large and complex MIME libraries. If you just want to parse a MIME multipart message without hassle then using all of those libraries are less than ideal. They all tend to handle the kitchen sink (e.g. they handling email parsing and all kinds of other stuff you don't need) or they depend on other libraries that you may not want (e.g. APR, glib) or they are under-documented or under-tested or just not efficient (e.g. buffering all data in memory; good luck parsing a 2 GB file upload). You can write your own parser but because the multipart grammar is so much of a pain it's very easy to make mistakes.
Goals and highlights of this parser

    Multipart parsing, and only multipart parsing.
    Event-driven API.
    No dependencies on any external libraries, just straight C++ with STL.
    Efficient. Nothing in the input is buffered except what's absolutely necessary for parsing.
    Only one level of multipart parsing. A multipart message part can itself be a multipart message, but this parser doesn't attempt to provide a complex API for handling nested multipart messages. Instead the developer should just use another parser instance to parse nested messages.
    No I/O is handled for you. This parser won't depend on any particular I/O library or even any particular operating system's I/O API. It won't block on I/O by itself, giving you full control over when (not) to block. It won't save data to files by itself, giving you full control over what to do with the parsed data.
    Not thread-safe, but reentrant. No dependencies on any threading libraries.

    © 2018 GitHub , Inc.
    Terms
    Privacy
    Security
    Status
    Help

    Contact GitHub
    API
    Training
    Shop
    Blog
    About

You can't perform that action at this time.
You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session.
Press h to open a hovercard with more details.
