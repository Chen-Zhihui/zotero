
Skip to content
This repository

    Pull requests
    Issues
    Marketplace
    Explore

        New repository Import repository New gist New organization
        This repository
        New issue 
    @Chen-Zhihui
        Signed in as Chen-Zhihui
        Your profile
        Your stars
        Your gists
        Help
        Settings
        Sign out

Sign out

    Watch 4
    Notifications
    Not watching Be notified when participating or @mentioned. Watch
    Watching Be notified of all conversations. Unwatch
    Ignoring Never be notified. Stop ignoring
    Unstar 22
    Star 22
    Fork
    Where should we fork this repository?
    Loading
    3

leonardvandriel / caffe2_models
Code Issues 6 Pull requests 0 Projects 0 Wiki Insights
Pre-trained models for Caffe2

    8 commits
    1 branch
    0 releases
    1 contributor
    BSD-2-Clause

    PureBasic 100.0%

PureBasic
Clone or download
Use SSH
Clone with HTTPS

Use Git or checkout with SVN using the web URL.
Use HTTPS
Clone with SSH

Use an SSH key and passphrase from account.
Download ZIP
Launching GitHub Desktop ...

If nothing happens, download GitHub Desktop and try again.

Go back
Launching GitHub Desktop ...

If nothing happens, download GitHub Desktop and try again.

Go back
Launching Xcode ...

If nothing happens, download Xcode and try again.

Go back
Launching Visual Studio ...

If nothing happens, download the GitHub extension for Visual Studio and try again.

Go back
Create new file
Upload files Find file
Branch: master
Switch branches/tags

    Branches
    Tags

master
Nothing to show
Nothing to show
New pull request
Fetching latest commit…
Cannot retrieve the latest commit at this time.
Permalink
	Failed to load latest commit information.
	model 	add alexnet and googlenet 	Sep 26, 2017
	.gitattributes 	add vgg16 model 	Jun 27, 2017
	LICENSE 	Initial commit 	Jun 27, 2017
	README.md 	add model links 	Jun 28, 2017
README.md
Pre-trained Caffe2 Models

A collection of common deep learning models, pre-trained for Caffe2

    VGG
    ResNet

VGG

The VGG model, described in the technical report Very Deep Convolutional Networks for Large-Scale Visual Recognition , pre-trained on the ImageNet dataset, available on the VGG website .
Model

Both the 16-layer and 19-layer model files can be found in the model folder. They require input images of size 224x224. See this Caffe2 C++ Tutorial for an example of how to load this model in Caffe2.

    VGG 16-layer:
        vgg16_init_net.pb
        vgg16_predict_net.pb
    VGG 19-layer:
        vgg19_init_net.pb
        vgg19_predict_net.pb

How the 16-layer model was generated

    The Caffe model consists of two files:
        VGG_ILSVRC_16_layers.caffemodel containing the model weights for initialization (553 MB)
        VGG_ILSVRC_16_layers_deploy.prototxt containing the model layers for prediction

    This caffemodel file is of an older protobuf format, requiring some manual translation:

     sed -i '' \ -e 's/layers {/layer {/g' \ -e 's/CONVOLUTION/"Convolution"/g' \ -e 's/RELU/"ReLU"/g' \ -e 's/POOLING/"Pooling"/g' \ -e 's/INNER_PRODUCT/"InnerProduct"/g' \ -e 's/DROPOUT/"Dropout"/g' \ -e 's/SOFTMAX/"Softmax"/g' \ VGG_ILSVRC_16_layers_deploy.prototxt  

    I'm sure this can be done more efficiently.

    Now we can run the translator tool that is included in the Caffe2 sources :

     python caffe_translator.py VGG_ILSVRC_16_layers_deploy.prototxt VGG_ILSVRC_16_layers.caffemodel  

    This will take a while. On a 2016 MacBook Pro over 4 hours, requiring close to 16GB of memory.

    This will output two Caffe2 protobuf files:
        init_net.pb containing the model weights for initialization
        predict_net.pb containing the model operators for prediction

ResNet

The ResNet model, described in the technical report Deep Residual Learning for Image Recognition , pre-trained on the ImageNet dataset, available on the MSRA GitHub .
Model

The three original models (ResNet-50, ResNet-101, and ResNet-152) can be found in the model folder. They require input images of size 224x224. See this Caffe2 C++ Tutorial for an example of how to load this model in Caffe2.

    ResNet-50
        resnet50_init_net.pb
        resnet50_predict_net.pb
    ResNet-101
        resnet101_init_net.pb
        resnet101_predict_net.pb
    ResNet-152
        resnet152_init_net.pb
        resnet152_predict_net.pb

How the ResNet-101 model was generated

    The Caffe model consists of two files:
        ResNet-101-deploy.prototxt containing the model weights for initialization (170 MB)
        ResNet-101-model.caffemodel containing the model layers for prediction

    Now we can run the translator tool that is included in the Caffe2 sources :

     python caffe_translator.py ResNet-101-deploy.prototxt ResNet-101-model.caffemodel  

    This will take a while. On a 2016 MacBook Pro over 30 minutes, requiring close to 4GB of memory.

    There seems to be two bugs in the translator:
        The SpatialBN operator has equal input and output, which is not allowed for this operator ( _unique ).
        Some _w and _b blobs have the same name, resulting in predictable collisions ( _second ).

    These problems are resolved by converting the model using the following C++ code:

     NetDef init_net, predict_net; CAFFE_ENFORCE(ReadProtoFromFile("resnet50_init_net.pb", &init_net)); CAFFE_ENFORCE(ReadProtoFromFile("resnet50_predict_net.pb", &predict_net)); // remove duplicate initializations std::set<string> existing; for (const OperatorDef &constop: init_net.op()) { OperatorDef &op = const_cast<OperatorDef &>(constop); if (existing.find(op.output(0)) != existing.end()) { int i = 0, j = 0; for (auto &external: predict_net.external_input()) { if (external == op.output(0)) { j++; if (j == 2) { predict_net.set_external_input(i, op.output(0) + "_second"); break; } } i++; } op.set_output(0, op.output(0) + "_second"); } existing.insert(op.output(0)); } // fix self-reference in SpatialBN operations string name; for (const OperatorDef &constop: predict_net.op()) { OperatorDef &op = const_cast<OperatorDef &>(constop); if (name.size() && op.input(0) == name) { op.set_input(0, name + "_unique"); if (existing.find(op.input(1) + "_second") != existing.end()) { op.set_input(1, op.input(1) + "_second"); } } if (op.output(0) == name) { name = ""; } if (op.type() == "SpatialBN" && op.input(0) == op.output(0)) { name = op.input(0); op.set_output(0, name + "_unique"); } } WriteProtoToBinaryFile(init_net, "init_net.pb"); WriteProtoToBinaryFile(predict_net, "predict_net.pb");  

    This will output two Caffe2 protobuf files:
        init_net.pb containing the model weights for initialization
        predict_net.pb containing the model operators for prediction

    © 2018 GitHub , Inc.
    Terms
    Privacy
    Security
    Status
    Help

    Contact GitHub
    API
    Training
    Shop
    Blog
    About

You can't perform that action at this time.
You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session.
Press h to open a hovercard with more details.
