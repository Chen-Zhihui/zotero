
Documentation Archive Developer
Search
Search Documentation Archive
Information Property List Key Reference
PDF Companion File

    Table of Contents
    Download Sample Code

    Introduction
    About Information Property List Files
        Creating and Editing an Information Property List File
        Adding Keys to an Information Property List File
        Localizing Property List Values
        Creating Platform- and Device-Specific Keys
        Custom Keys
        Recommended Info.plist Keys
            Recommended Keys for iOS Apps
            Recommended Keys for Cocoa Apps
            Commonly Localized Keys
    Core Foundation Keys
        Key Summary
        CFAppleHelpAnchor
        CFBundleAllowMixedLocalizations
        CFBundleDevelopmentRegion
        CFBundleDisplayName
        CFBundleDocumentTypes
            Document Roles
            Document Icons
            Recommended Keys
        CFBundleExecutable
        CFBundleHelpBookFolder
        CFBundleHelpBookName
        CFBundleIconFile
        CFBundleIconFiles
        CFBundleIcons
            Contents of the CFBundlePrimaryIcon Dictionary Entry
            Contents of the CFBundleAlternateIcons Dictionary Entry
            Contents of the UINewsstandIcon Dictionary
        CFBundleIdentifier
        CFBundleInfoDictionaryVersion
        CFBundleLocalizations
        CFBundleName
        CFBundlePackageType
        CFBundleShortVersionString
        CFBundleSpokenName
        CFBundleURLTypes
        CFBundleVersion
        CFPlugInDynamicRegistration
        CFPlugInDynamicRegisterFunction
        CFPlugInFactories
        CFPlugInTypes
        CFPlugInUnloadFunction
    Launch Services Keys
        Key Summary
        LSApplicationCategoryType
        LSApplicationQueriesSchemes
        LSArchitecturePriority
        LSBackgroundOnly
        LSEnvironment
        LSFileQuarantineEnabled
        LSFileQuarantineExcludedPathPatterns
        LSGetAppDiedEvents
        LSMinimumSystemVersion
        LSMinimumSystemVersionByArchitecture
        LSMultipleInstancesProhibited
        LSRequiresIPhoneOS
        LSRequiresNativeExecution
        LSSupportsOpeningDocumentsInPlace
        LSUIElement
        LSUIPresentationMode
        LSVisibleInClassic
        MinimumOSVersion
    Cocoa Keys
        Key Summary
        GCSupportedGameControllers
        GCSupportsMultipleMicroGamepads
        GKGameCenterBadgingDisabled
        GKShowChallengeBanners
        NETestAppMapping
        NFCReaderUsageDescription
        NSAppleMusicUsageDescription
        NSAppleScriptEnabled
        NSAppTransportSecurity
            ATS Configuration Basics
            Using ATS in Apple Frameworks
            Availability of ATS for Remote and Local Connections
            Requirements for Connecting Using ATS
            Certificate Transparency
            ATS and HTTPS Server Trust Evaluation Requirements
            Supporting Older Operating Systems
            App Store Review for ATS
            ATS Dictionary Details
            ATS Examples
                Allowing Insecure Connection to a Single Server
                Allowing Lowered Security to a Single Server
                Using ATS For Your Servers and Allowing Insecure Connections Elsewhere
            Debugging ATS Connections
            Using the nscurl Tool to Diagnose ATS Connection Issues
        NSBluetoothPeripheralUsageDescription
        NSCalendarsUsageDescription
        NSCameraUsageDescription
        NSContactsUsageDescription
        NSDockTilePlugIn
        NSFaceIDUsageDescription
        NSHealthClinicalHealthRecordsShareUsageDescription
        NSHealthRequiredReadAuthorizationTypeIdentifier
        NSHealthRequiredWriteAuthorizationTypeIdentifiers
        NSHealthShareUsageDescription
        NSHealthUpdateUsageDescription
        NSHomeKitUsageDescription
        NSHumanReadableCopyright
        NSJavaNeeded
        NSJavaPath
        NSJavaRoot
        NSLocationAlwaysUsageDescription
        NSLocationUsageDescription
        NSLocationWhenInUseUsageDescription
        NSMainNibFile
        NSMicrophoneUsageDescription
        NSMotionUsageDescription
        NSPersistentStoreTypeKey
        NSPhotoLibraryAddUsageDescription
        NSPhotoLibraryUsageDescription
        NSPrefPaneIconFile
        NSPrefPaneIconLabel
        NSPrincipalClass
        NSRemindersUsageDescription
        NSServices
        NSSiriUsageDescription
        NSSpeechRecognitionUsageDescription
        NSSupportsAutomaticTermination
        NSSupportsPurgeableLocalStorage
        NSSupportsSuddenTermination
        NSUbiquitousContainers
        NSUbiquitousContainerIsDocumentScopePublic
        NSUbiquitousContainerName
        NSUbiquitousContainerSupportedFolderLevels
        NSUbiquitousDisplaySet
        NSUserActivityTypes
        NSUserNotificationAlertStyle
        NSVideoSubscriberAccountUsageDescription
        UTExportedTypeDeclarations
        UTImportedTypeDeclarations
    macOS Keys
        Key Summary
        APInstallerURL
        APFiles
        ATSApplicationFontsPath
        CSResourcesFileMapped
        NSMainStoryboardFile
        QLSandboxUnsupported
        QuartzGLEnable
    iOS Keys
        Key Summary
        CoreSpotlightContinuation
        INAlternativeAppNames
        MKDirectionsApplicationSupportedModes
        UIAppFonts
        UIApplicationExitsOnSuspend
        UIApplicationShortcutItems
        UIApplicationShortcutWidget
        UIAppSupportsHDR
        UIBackgroundModes
        UIDeviceFamily
        UIFileSharingEnabled
        UIInterfaceOrientation
        UILaunchImageFile
            Naming Your Launch Image Files
        UILaunchImages
        UILaunchStoryboardName
        UILaunchStoryboards
        UIMainStoryboardFile
        UINewsstandApp
        UIPrerenderedIcon
        UIRequiredDeviceCapabilities
        UIRequiresPersistentWiFi
        UIStatusBarHidden
        UIStatusBarStyle
        UISupportedExternalAccessoryProtocols
        UISupportedInterfaceOrientations
        UISupportsDocumentBrowser
        UIUserInterfaceStyle
        UIURLToLaunchStoryboardAssociations
        UIViewControllerBasedStatusBarAppearance
        UIViewEdgeAntialiasing
        UIViewGroupOpacity
        UIWhitePointAdaptivityStyle
    watchOS Keys
        Key Summary
        CLKComplicationSupportedFamilies
        CLKComplicationPrincipalClass
        PUICAutoLaunchAudioOptOut
        WKAppBundleIdentifier
        WKBackgroundModes
        WKCompanionAppBundleIdentifier
        WKExtensionDelegateClassName
        WKWatchKitApp
    App Extension Keys
        Key Summary
        General App Extension Keys
            NSExtension
            NSExtensionAttributes
            NSExtensionMainStoryboard
            NSExtensionOverridesHostUIAppearance
            NSExtensionPointIdentifier
            NSExtensionPrincipalClass
        Action Extension Keys
            NSExtensionActionWantsFullScreenPresentation
            NSExtensionActivationRule
            NSExtensionActivationDictionaryVersion
            NSExtensionActivationUsesStrictMatching
            NSExtensionJavaScriptPreprocessingFile
            NSExtensionServiceAllowsToolbarItem
            NSExtensionServiceRoleType
            NSExtensionServiceToolbarIconFile
            NSExtensionServiceToolbarPaletteLabel
        Custom Keyboard Extension Keys
            IsASCIICapable
            PrefersRightToLeft
            PrimaryLanguage
            RequestsOpenAccess
        Document Picker and File Provider Extension Keys
            NSExtensionFileProviderDocumentGroup
            NSExtensionFileProviderActions
            NSExtensionFileProviderSupportsEnumeration
            UIDocumentPickerModes
            UIDocumentPickerSupportedFileTypes
        iMessage App and Sticker Pack Keys
            MSMessagesAppPresentationContextMessages
        Message Filter Extension Keys
            IDMessageFilterExtensionNetworkURL
        Notification Content Extension Keys
            UNNotificationExtensionCategory
            UNNotificationExtensionInitialContentSizeRatio
            UNNotificationExtensionDefaultContentHidden
            UNNotificationExtensionOverridesDefaultTitle
            UNNotificationExtensionUserInteractionEnabled
        Photo Editing Extension Keys
            PHSupportedMediaTypes
        Safari App Extension Keys
            SFSafariContentScript
                URL Patterns for Scripts and Styles
                Creating URL Patterns
            SFSafariContextMenu
            SFSafariStyleSheet
            SFSafariToolbarItem
            SFSafariWebsiteAccess
            Replacing Safari Extensions With Your App Extension
        Share Extension Keys
            NSExtensionActivationRule
            NSExtensionJavaScriptPreprocessingFile
        Unwanted Communication Reporting Extension Keys
            ILClassificationExtensionSMSReportDestination
    Revision History
        RELATED DOCUMENT
        Runtime Configuration Guidelines

Next
About Info.plist Keys and Values

Important:  This document is no longer being updated. For the latest information about Apple SDKs, visit the documentation website .

To provide a better experience for users, iOS and macOS rely on the presence of special metadata in each app or bundle. This metadata is used in many different ways. Some of it is displayed to the user, some of it is used internally by the system to identify your app and the document types it supports, and some of it is used by the system frameworks to facilitate the launch of apps. The way an app provides its metadata to the system is through the use of a special file called an information property list file , or Info.plist for short.

A property list is a way to structure arbitrary data that the system can access at runtime. An information property list is a specialized type of property list that contains configuration data for a bundle. The keys and values in the file describe the various behaviors and configuration options you want applied to your bundle. An Xcode project template typically specifies an information property list file with an initial set of keys and appropriate default values. You can edit the file to change or add keys and values, as appropriate for your project.
At a Glance

This document describes the keys and corresponding values that you can include in an information property list file. This document also includes an overview of information property list files to help you understand their importance and to provide tips on how to configure them.
The Info.plist File Configures Your App

Every app and plug-in uses an Info.plist file to store configuration data in a place where the system can easily access it. macOS and iOS use Info.plist files to determine what icon to display for a bundle, what document types an app supports, and many other behaviors that have an impact outside the bundle itself.

Relevant chapter:   About Information Property List Files

Core Foundation Keys Describe Common Behavior

There are many keys that you always specify, regardless of the type of bundle you are creating. Those keys start with a CF prefix and are known as the Core Foundation keys. Xcode includes the most important keys in your Info.plist automatically but there are others you must add manually.

Relevant chapter:   Core Foundation Keys

Launch Services Keys Describe Launch-Time Behavior

Launch Services provides support for launching apps. To do this, though, it needs to know information about how your app wants to be launched. The Launch Services keys describe the way your app prefers to be launched.

Relevant chapter:   Launch Services Keys

Cocoa Keys Describe Behavior for Cocoa and Cocoa Touch Apps

The Cocoa and Cocoa Touch frameworks use keys to identify high-level information such as your app’s main nib file and principal class. The Cocoa keys describe those and other keys that affect how the Cocoa and Cocoa Touch frameworks initialize and run your app.

Relevant chapter:   Cocoa Keys

macOS Keys Describe Behavior for macOS Apps

Some macOS frameworks use keys to modify their basic behavior. Developers of Mac apps might include these keys during testing or to modify certain aspects of your app’s behavior.

Relevant chapter:   macOS Keys

iOS Keys Describe Behavior for iOS Apps

An iOS app communicates a lot of information to the system using Info.plist keys. Xcode supplies a standard Info.plist with the most important keys but most apps need to augment the standard file with additional keys describing everything from the app’s initial orientation to whether it supports file sharing.

Relevant chapter:   iOS Keys

watchOS Keys Describe Behavior for Watch Apps

Use the Info.plist keys associated with the watchOS frameworks to configure your Watch apps and WatchKit extensions.

Relevant chapter:   watchOS Keys

App Extension Keys Describe Behavior for iOS and macOS App Extensions

App extensions let you make custom behaviors available in other apps and in system facilities such as notification center. Xcode’s app extension templates each supply a standard Info.plist file with the most important keys, but you can specify additional keys that describe custom behavior for your app extensions.

Relevant chapter:   App Extension Keys

See Also

For an introduction to property lists, including how they are structured and how you use them in general, see Property List Programming Guide .

Some Info.plist keys use Uniform Type Identifiers (UTIs) to refer to data of different types. For an introduction to UTIs and how they are specified, see Uniform Type Identifiers Overview .

Kernel extension developers need to use certain Info.plist keys in different ways than app developers do, and also need some kernel-extension-specific keys that have no use in app development. If you are developing a kernel extension , refer to the chapter Info.plist Properties for Kernel Extensions in Kernel Extension Programming Topics .
Next


Copyright © 2018 Apple Inc. All Rights Reserved. Terms of Use | Privacy Policy | Updated: 2018-06-04
Sending feedback…
We’re sorry, an error has occurred.

Please try submitting your feedback later.
Thank you for providing feedback!

Your input helps improve our developer documentation.
How helpful is this document?
*
Very helpful Somewhat helpful Not helpful
How can we improve this document?
Fix typos or links Fix incorrect information Add or update code samples Add or update illustrations Add information about...
*

* Required information

To submit a product bug or enhancement request, please visit the Bug Reporter page.

Please read Apple's Unsolicited Idea Submission Policy before you send us your feedback.
