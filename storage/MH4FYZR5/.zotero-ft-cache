
Skip to content
This repository

    Pull requests
    Issues
    Marketplace
    Explore

        New repository Import repository New gist New organization
        This repository
        New issue 
    @Chen-Zhihui
        Signed in as Chen-Zhihui
        Your profile
        Your stars
        Your gists
        Help
        Settings
        Sign out

Sign out

    Watch 27
    Notifications
    Not watching Be notified when participating or @mentioned. Watch
    Watching Be notified of all conversations. Unwatch
    Ignoring Never be notified. Stop ignoring
    Unstar 187
    Star 187
    Fork
    Where should we fork this repository?
    Loading
    129

anson0910 / CNN_face_detection
Code Issues 9 Pull requests 0 Projects 0 Wiki Insights
Implementation based on the paper Li et al., “A Convolutional Neural Network Cascade for Face Detection, ” 2015 CVPR
caffe face-detection convolutional-neural-networks cascade neural-networks deep-learning machine-learning

    36 commits
    1 branch
    0 releases
    2 contributors

    Python 100.0%

Python
Clone or download
Use SSH
Clone with HTTPS

Use Git or checkout with SVN using the web URL.
Use HTTPS
Clone with SSH

Use an SSH key and passphrase from account.
Download ZIP
Launching GitHub Desktop ...

If nothing happens, download GitHub Desktop and try again.

Go back
Launching GitHub Desktop ...

If nothing happens, download GitHub Desktop and try again.

Go back
Launching Xcode ...

If nothing happens, download Xcode and try again.

Go back
Launching Visual Studio ...

If nothing happens, download the GitHub extension for Visual Studio and try again.

Go back
Create new file
Upload files Find file
Branch: master
Switch branches/tags

    Branches
    Tags

master
Nothing to show
Nothing to show
New pull request
Fetching latest commit…
Cannot retrieve the latest commit at this time.
Permalink
	Failed to load latest commit information.
	face_calibration 	Fix calibration data preperation bug 	Jul 14, 2016
	face_detection 	Remove unnecessary files 	Aug 7, 2016
	face_net_surgery 	Add soft quantizing and tri section initialization methods 	Dec 8, 2015
	face_preprocess_10kUS 	Make scripts more general 	Dec 16, 2015
	face_training_quantized 	Finish soft quantize training script 	Dec 13, 2015
	AFLW_Faces.txt 	Add AFLW text files. 	Oct 14, 2017
	AFLW_Rect.txt 	Add AFLW text files. 	Oct 14, 2017
	AFLW_sex.txt 	Add AFLW text files. 	Oct 14, 2017
	README.md 	Update README.md 	May 13, 2016
README.md
Implementation based on the paper Li et al., “A Convolutional Neural Network Cascade for Face Detection, ” 2015 CVPR
A few modifications to the paper:

    Multi-resolution is not used for simplicity, you can add them in the .prototxt files under CNN_face_detection_models to do so.
    12-net is turned into fully convolutional neural network to reduce computation.
    I took out the normalization layers out of the deploy.prototxt files in 48-net and 48-calibration-net, because of convenience for me implementing them in hardware, you can just simply at them back as in the corresponding train_val.prototxt files.

In order to test CNN Cascade:

Detection scripts are stored under CNN_face_detection/face_detection directory, and models can be found in CNN_face_detection_models repository.

For testing single image, use script face_cascade_fullconv_single_crop_single_image.py
For benchmarking on FDDB, use script face_cascade_fullconv_fddb.py

If you're not familiar with caffe's flow yet, dennis-chen's reply here gives a great picture.
In order to train CNN Cascade:

    You should first download all faces from the AFLW dataset, and at least 3000 images without any faces (negative images).
    Create negative patches by running face_preprocess_10kUS/create_negative.py with data_base_dir modified to the folder containing the negative images.
    Create positive patches by running face_preprocess_10kUS/aflw.py
    Run face_preprocess_10kUS/shuffle_write_positives.py and face_preprocess_10kUS/shuffle_write_negatives.py to shuffle and write position and labels of images to file.
    Run face_preprocess_10kUS/write_train_val.py to create train.txt, val.txt and move images to corresponding folders as caffe requires.
    Use scripts in CNN_face_detection_models/create_lmdb_scripts/ to create lmdb files as caffe requires.
    Start training by using such commands in terminal.
    ./build/tools/caffe train --solver=models/face_12c/solver.prototxt

24 net and 48 net can be created in a similar way, however negative images shoud be created by running face_preprocess_10kUS/create_negative_24c.py and face_preprocess_10kUS/create_negative_48c.py

Calibration nets are also trained similarly, scripts can be found in face_calibration/

    © 2018 GitHub , Inc.
    Terms
    Privacy
    Security
    Status
    Help

    Contact GitHub
    API
    Training
    Shop
    Blog
    About

You can't perform that action at this time.
You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session.
Press h to open a hovercard with more details.
