
Expectation–maximization algorithm
From Wikipedia, the free encyclopedia
This is the current revision of this page, as edited by Zhjk07 ( talk  | contribs ) at 19:59, 19 July 2018 (Undid revision 851058262 by Zhjk07 ( talk )) . The present address (URL) is a permanent link to this version.
Revision as of 19:59, 19 July 2018 by Zhjk07 ( talk  | contribs ) (Undid revision 851058262 by Zhjk07 ( talk ))
( diff ) ← Previous revision  | Latest revision (diff) | Newer revision → (diff)
Jump to navigation Jump to search
Machine learning and
data mining
Kernel Machine.svg
Problems [show]

    Classification
    Clustering
    Regression
    Anomaly detection
    AutoML
    Association rules
    Reinforcement learning
    Structured prediction
    Feature engineering
    Feature learning
    Online learning
    Semi-supervised learning
    Unsupervised learning
    Learning to rank
    Grammar induction

Supervised learning
( classification  • regression )
[show]

    Decision trees
    Ensembles ( Bagging , Boosting , Random forest )
    k -NN
    Linear regression
    Naive Bayes
    Neural networks
    Logistic regression
    Perceptron
    Relevance vector machine (RVM)
    Support vector machine (SVM)

Clustering [show]

    BIRCH
    CURE
    Hierarchical
    k -means
    Expectation–maximization (EM)

    DBSCAN
    OPTICS
    Mean-shift

Dimensionality reduction [show]

    Factor analysis
    CCA
    ICA
    LDA
    NMF
    PCA
    t-SNE

Structured prediction [show]

    Graphical models ( Bayes net , CRF , HMM )

Anomaly detection [show]

    k -NN
    Local outlier factor

Neural nets [show]

    Autoencoder
    Deep learning
    Multilayer perceptron
    RNN ( LSTM , GRU )
    Restricted Boltzmann machine
    SOM
    Convolutional neural network ( U-Net )

Reinforcement learning [show]

    Q-learning
    SARSA
    Temporal difference (TD)

Theory [show]

    Bias-variance dilemma
    Computational learning theory
    Empirical risk minimization
    Occam learning
    PAC learning
    Statistical learning
    VC theory

Machine-learning venues [show]

    NIPS
    ICML
    ML
    JMLR
    ArXiv:cs.LG

Glossary of artificial intelligence [show]

    Glossary of artificial intelligence

Related articles [show]

    List of datasets for machine-learning research
    Outline of machine learning

    Portal-puzzle.svg Machine learning portal

    v
    t
    e

In statistics , an expectation–maximization ( EM ) algorithm is an iterative method to find maximum likelihood or maximum a posteriori (MAP) estimates of parameters in statistical models , where the model depends on unobserved latent variables . The EM iteration alternates between performing an expectation (E) step, which creates a function for the expectation of the log-likelihood evaluated using the current estimate for the parameters, and a maximization (M) step, which computes parameters maximizing the expected log-likelihood found on the E step. These parameter-estimates are then used to determine the distribution of the latent variables in the next E step.
EM clustering of Old Faithful eruption data. The random initial model (which, due to the different scales of the axes, appears to be two very flat and wide spheres) is fit to the observed data. In the first iterations, the model changes substantially, but then converges to the two modes of the geyser . Visualized using ELKI .
Contents
 [ hide ] 

    1 History
    2 Introduction
    3 Description
    4 Properties
    5 Proof of correctness
    6 As a maximization-maximization procedure
    7 Applications
    8 Filtering and smoothing EM algorithms
    9 Variants
        9.1 α-EM algorithm
    10 Relation to variational Bayes methods
    11 Geometric interpretation
    12 Examples
        12.1 Gaussian mixture
            12.1.1 E step
            12.1.2 M step
            12.1.3 Termination
            12.1.4 Generalization
        12.2 Truncated and censored regression
    13 Alternatives
    14 See also
    15 Further reading
    16 References
    17 External links

History [ edit ]

The EM algorithm was explained and given its name in a classic 1977 paper by Arthur Dempster , Nan Laird , and Donald Rubin . [1] They pointed out that the method had been "proposed many times in special circumstances" by earlier authors. A very detailed treatment of the EM method for exponential families was published by Rolf Sundberg in his thesis and several papers [2] [3] [4] following his collaboration with Per Martin-Löf and Anders Martin-Löf . [5] [6] [7] [8] [9] [10] [11] The Dempster–Laird–Rubin paper in 1977 generalized the method and sketched a convergence analysis for a wider class of problems. Regardless of earlier inventions, the innovative Dempster–Laird–Rubin paper in the Journal of the Royal Statistical Society received an enthusiastic discussion at the Royal Statistical Society meeting with Sundberg calling the paper "brilliant". The Dempster–Laird–Rubin paper established the EM method as an important tool of statistical analysis.

The convergence analysis of the Dempster–Laird–Rubin paper was flawed and a correct convergence analysis was published by C. F. Jeff Wu in 1983. [12] Wu's proof established the EM method's convergence outside of the exponential family , as claimed by Dempster–Laird–Rubin. [12]
Introduction [ edit ]

The EM algorithm is used to find (local) maximum likelihood parameters of a statistical model in cases where the equations cannot be solved directly. Typically these models involve latent variables in addition to unknown parameters and known data observations. That is, either missing values exist among the data, or the model can be formulated more simply by assuming the existence of further unobserved data points. For example, a mixture model can be described more simply by assuming that each observed data point has a corresponding unobserved data point, or latent variable, specifying the mixture component to which each data point belongs.

Finding a maximum likelihood solution typically requires taking the derivatives of the likelihood function with respect to all the unknown values, the parameters and the latent variables, and simultaneously solving the resulting equations. In statistical models with latent variables, this is usually impossible. Instead, the result is typically a set of interlocking equations in which the solution to the parameters requires the values of the latent variables and vice versa, but substituting one set of equations into the other produces an unsolvable equation.

The EM algorithm proceeds from the observation that there is a way to solve these two sets of equations numerically. One can simply pick arbitrary values for one of the two sets of unknowns, use them to estimate the second set, then use these new values to find a better estimate of the first set, and then keep alternating between the two until the resulting values both converge to fixed points. It's not obvious that this will work, but it can be proven that in this context it does, and that the derivative of the likelihood is (arbitrarily close to) zero at that point, which in turn means that the point is either a maximum or a saddle point . [12] In general, multiple maxima may occur, with no guarantee that the global maximum will be found. Some likelihoods also have singularities in them, i.e., nonsensical maxima. For example, one of the solutions that may be found by EM in a mixture model involves setting one of the components to have zero variance and the mean parameter for the same component to be equal to one of the data points.
Description [ edit ]

Given the statistical model which generates a set X {\displaystyle \mathbf {X} } \mathbf {X} of observed data, a set of unobserved latent data or missing values Z {\displaystyle \mathbf {Z} } \mathbf {Z} , and a vector of unknown parameters θ {\displaystyle {\boldsymbol {\theta }}} {\boldsymbol {\theta }} , along with a likelihood function L ( θ ; X , Z ) = p ( X , Z | θ ) {\displaystyle L({\boldsymbol {\theta }};\mathbf {X} ,\mathbf {Z} )=p(\mathbf {X} ,\mathbf {Z} |{\boldsymbol {\theta }})} L(\boldsymbol\theta; \mathbf{X}, \mathbf{Z}) = p(\mathbf{X}, \mathbf{Z}|\boldsymbol\theta) , the maximum likelihood estimate (MLE) of the unknown parameters is determined by maximizing the marginal likelihood of the observed data

    L ( θ ; X ) = p ( X | θ ) = ∫ p ( X , Z | θ ) d Z {\displaystyle L({\boldsymbol {\theta }};\mathbf {X} )=p(\mathbf {X} |{\boldsymbol {\theta }})=\int p(\mathbf {X} ,\mathbf {Z} |{\boldsymbol {\theta }})d\mathbf {Z} } {\displaystyle L({\boldsymbol {\theta }};\mathbf {X} )=p(\mathbf {X} |{\boldsymbol {\theta }})=\int p(\mathbf {X} ,\mathbf {Z} |{\boldsymbol {\theta }})d\mathbf {Z} } 

However, this quantity is often intractable (e.g. if Z {\displaystyle \mathbf {Z} } \mathbf {Z} is a sequence of events, so that the number of values grows exponentially with the sequence length, making the exact calculation of the sum extremely difficult).

The EM algorithm seeks to find the MLE of the marginal likelihood by iteratively applying these two steps:

    Expectation step (E step) : Calculate the expected value of the log likelihood function , with respect to the conditional distribution of Z {\displaystyle \mathbf {Z} } \mathbf {Z} given X {\displaystyle \mathbf {X} } \mathbf {X} under the current estimate of the parameters θ ( t ) {\displaystyle {\boldsymbol {\theta }}^{(t)}} \boldsymbol\theta^{(t)} :

        Q ( θ | θ ( t ) ) = E Z | X , θ ( t ) ⁡ [ log ⁡ L ( θ ; X , Z ) ] {\displaystyle Q({\boldsymbol {\theta }}|{\boldsymbol {\theta }}^{(t)})=\operatorname {E} _{\mathbf {Z} |\mathbf {X} ,{\boldsymbol {\theta }}^{(t)}}\left[\log L({\boldsymbol {\theta }};\mathbf {X} ,\mathbf {Z} )\right]\,} Q(\boldsymbol\theta|\boldsymbol\theta^{(t)}) = \operatorname{E}_{\mathbf{Z}|\mathbf{X},\boldsymbol\theta^{(t)}}\left[ \log L (\boldsymbol\theta;\mathbf{X},\mathbf{Z}) \right] \, 

    Maximization step (M step) : Find the parameters that maximize this quantity:

        θ ( t + 1 ) = a r g m a x θ   Q ( θ | θ ( t ) ) {\displaystyle {\boldsymbol {\theta }}^{(t+1)}={\underset {\boldsymbol {\theta }}{\operatorname {arg\,max} }}\ Q({\boldsymbol {\theta }}|{\boldsymbol {\theta }}^{(t)})\,} \boldsymbol\theta^{(t+1)} = \underset{\boldsymbol\theta}{\operatorname{arg\,max}} \ Q(\boldsymbol\theta|\boldsymbol\theta^{(t)}) \, 

The typical models to which EM is applied use Z {\displaystyle \mathbf {Z} } \mathbf {Z} as a latent variable indicating membership in one of a set of groups:

    The observed data points X {\displaystyle \mathbf {X} } \mathbf {X} may be discrete (taking values in a finite or countably infinite set) or continuous (taking values in an uncountably infinite set). Associated with each data point may be a vector of observations.
    The missing values (aka latent variables ) Z {\displaystyle \mathbf {Z} } \mathbf {Z} are discrete , drawn from a fixed number of values, and with one latent variable per observed unit.
    The parameters are continuous, and are of two kinds: Parameters that are associated with all data points, and those associated with a specific value of a latent variable (i.e., associated with all data points which corresponding latent variable has that value).

However, it is possible to apply EM to other sorts of models.


The motive is as follows. If the value of the parameters θ {\displaystyle {\boldsymbol {\theta }}} {\boldsymbol {\theta }} is known, usually the value of the latent variables Z {\displaystyle \mathbf {Z} } \mathbf {Z} can be found by maximizing the log-likelihood over all possible values of Z {\displaystyle \mathbf {Z} } \mathbf {Z} , either simply by iterating over Z {\displaystyle \mathbf {Z} } \mathbf {Z} or through an algorithm such as the Viterbi algorithm for hidden Markov models . Conversely, if we know the value of the latent variables Z {\displaystyle \mathbf {Z} } \mathbf {Z} , we can find an estimate of the parameters θ {\displaystyle {\boldsymbol {\theta }}} {\boldsymbol {\theta }} fairly easily, typically by simply grouping the observed data points according to the value of the associated latent variable and averaging the values, or some function of the values, of the points in each group. This suggests an iterative algorithm, in the case where both θ {\displaystyle {\boldsymbol {\theta }}} {\boldsymbol {\theta }} and Z {\displaystyle \mathbf {Z} } \mathbf {Z} are unknown:

    First, initialize the parameters θ {\displaystyle {\boldsymbol {\theta }}} {\boldsymbol {\theta }} to some random values.
    Compute the probability of each possible value of Z {\displaystyle \mathbf {Z} } \mathbf {Z} , given θ {\displaystyle {\boldsymbol {\theta }}} {\boldsymbol {\theta }} .
    Then, use the just-computed values of Z {\displaystyle \mathbf {Z} } \mathbf {Z} to compute a better estimate for the parameters θ {\displaystyle {\boldsymbol {\theta }}} {\boldsymbol {\theta }} .
    Iterate steps 2 and 3 until convergence.

The algorithm as just described monotonically approaches a local minimum of the cost function.
Properties [ edit ]

Speaking of an expectation (E) step is a bit of a misnomer . What are calculated in the first step are the fixed, data-dependent parameters of the function Q . Once the parameters of Q are known, it is fully determined and is maximized in the second (M) step of an EM algorithm.

Although an EM iteration does increase the observed data (i.e., marginal) likelihood function, no guarantee exists that the sequence converges to a maximum likelihood estimator . For multimodal distributions , this means that an EM algorithm may converge to a local maximum of the observed data likelihood function, depending on starting values. A variety of heuristic or metaheuristic approaches exist to escape a local maximum, such as random-restart hill climbing (starting with several different random initial estimates θ ( t ) ), or applying simulated annealing methods.

EM is especially useful when the likelihood is an exponential family : the E step becomes the sum of expectations of sufficient statistics , and the M step involves maximizing a linear function. In such a case, it is usually possible to derive closed-form expression updates for each step, using the Sundberg formula (published by Rolf Sundberg using unpublished results of Per Martin-Löf and Anders Martin-Löf ). [3] [4] [7] [8] [9] [10] [11]

The EM method was modified to compute maximum a posteriori (MAP) estimates for Bayesian inference in the original paper by Dempster, Laird, and Rubin.

Other methods exist to find maximum likelihood estimates, such as gradient descent , conjugate gradient , or variants of the Gauss–Newton algorithm . Unlike EM, such methods typically require the evaluation of first and/or second derivatives of the likelihood function.
Proof of correctness [ edit ]

Expectation-maximization works to improve Q ( θ | θ ( t ) ) {\displaystyle Q({\boldsymbol {\theta }}|{\boldsymbol {\theta }}^{(t)})} Q(\boldsymbol\theta|\boldsymbol\theta^{(t)}) rather than directly improving log ⁡ p ( X | θ ) {\displaystyle \log p(\mathbf {X} |{\boldsymbol {\theta }})} \log p(\mathbf{X}|\boldsymbol\theta) . Here is shown that improvements to the former imply improvements to the latter. [13]

For any Z {\displaystyle \mathbf {Z} } \mathbf {Z} with non-zero probability p ( Z | X , θ ) {\displaystyle p(\mathbf {Z} |\mathbf {X} ,{\boldsymbol {\theta }})} p(\mathbf{Z}|\mathbf{X},\boldsymbol\theta) , we can write

        log ⁡ p ( X | θ ) = log ⁡ p ( X , Z | θ ) − log ⁡ p ( Z | X , θ ) . {\displaystyle \log p(\mathbf {X} |{\boldsymbol {\theta }})=\log p(\mathbf {X} ,\mathbf {Z} |{\boldsymbol {\theta }})-\log p(\mathbf {Z} |\mathbf {X} ,{\boldsymbol {\theta }})\,.} \log p(\mathbf{X}|\boldsymbol\theta) = \log p(\mathbf{X},\mathbf{Z}|\boldsymbol\theta) - \log p(\mathbf{Z}|\mathbf{X},\boldsymbol\theta) \,. 

We take the expectation over possible values of the unknown data Z {\displaystyle \mathbf {Z} } \mathbf {Z} under the current parameter estimate θ ( t ) {\displaystyle \theta ^{(t)}} \theta^{(t)} by multiplying both sides by p ( Z | X , θ ( t ) ) {\displaystyle p(\mathbf {Z} |\mathbf {X} ,{\boldsymbol {\theta }}^{(t)})} p(\mathbf{Z}|\mathbf{X},\boldsymbol\theta^{(t)}) and summing (or integrating) over Z {\displaystyle \mathbf {Z} } \mathbf {Z} . The left-hand side is the expectation of a constant, so we get:

        log ⁡ p ( X | θ ) = ∑ Z p ( Z | X , θ ( t ) ) log ⁡ p ( X , Z | θ ) − ∑ Z p ( Z | X , θ ( t ) ) log ⁡ p ( Z | X , θ ) = Q ( θ | θ ( t ) ) + H ( θ | θ ( t ) ) , {\displaystyle {\begin{aligned}\log p(\mathbf {X} |{\boldsymbol {\theta }})&=\sum _{\mathbf {Z} }p(\mathbf {Z} |\mathbf {X} ,{\boldsymbol {\theta }}^{(t)})\log p(\mathbf {X} ,\mathbf {Z} |{\boldsymbol {\theta }})-\sum _{\mathbf {Z} }p(\mathbf {Z} |\mathbf {X} ,{\boldsymbol {\theta }}^{(t)})\log p(\mathbf {Z} |\mathbf {X} ,{\boldsymbol {\theta }})\\&=Q({\boldsymbol {\theta }}|{\boldsymbol {\theta }}^{(t)})+H({\boldsymbol {\theta }}|{\boldsymbol {\theta }}^{(t)})\,,\end{aligned}}} \begin{align} \log p(\mathbf{X}|\boldsymbol\theta) & = \sum_{\mathbf{Z}} p(\mathbf{Z}|\mathbf{X},\boldsymbol\theta^{(t)}) \log p(\mathbf{X},\mathbf{Z}|\boldsymbol\theta) - \sum_{\mathbf{Z}} p(\mathbf{Z}|\mathbf{X},\boldsymbol\theta^{(t)}) \log p(\mathbf{Z}|\mathbf{X},\boldsymbol\theta) \\ & = Q(\boldsymbol\theta|\boldsymbol\theta^{(t)}) + H(\boldsymbol\theta|\boldsymbol\theta^{(t)}) \,, \end{align} 

where H ( θ | θ ( t ) ) {\displaystyle H({\boldsymbol {\theta }}|{\boldsymbol {\theta }}^{(t)})} H(\boldsymbol\theta|\boldsymbol\theta^{(t)}) is defined by the negated sum it is replacing. This last equation holds for any value of θ {\displaystyle {\boldsymbol {\theta }}} {\boldsymbol {\theta }} including θ = θ ( t ) {\displaystyle {\boldsymbol {\theta }}={\boldsymbol {\theta }}^{(t)}} \boldsymbol\theta = \boldsymbol\theta^{(t)} ,

        log ⁡ p ( X | θ ( t ) ) = Q ( θ ( t ) | θ ( t ) ) + H ( θ ( t ) | θ ( t ) ) , {\displaystyle \log p(\mathbf {X} |{\boldsymbol {\theta }}^{(t)})=Q({\boldsymbol {\theta }}^{(t)}|{\boldsymbol {\theta }}^{(t)})+H({\boldsymbol {\theta }}^{(t)}|{\boldsymbol {\theta }}^{(t)})\,,} \log p(\mathbf{X}|\boldsymbol\theta^{(t)}) = Q(\boldsymbol\theta^{(t)}|\boldsymbol\theta^{(t)}) + H(\boldsymbol\theta^{(t)}|\boldsymbol\theta^{(t)}) \,, 

and subtracting this last equation from the previous equation gives

        log ⁡ p ( X | θ ) − log ⁡ p ( X | θ ( t ) ) = Q ( θ | θ ( t ) ) − Q ( θ ( t ) | θ ( t ) ) + H ( θ | θ ( t ) ) − H ( θ ( t ) | θ ( t ) ) , {\displaystyle \log p(\mathbf {X} |{\boldsymbol {\theta }})-\log p(\mathbf {X} |{\boldsymbol {\theta }}^{(t)})=Q({\boldsymbol {\theta }}|{\boldsymbol {\theta }}^{(t)})-Q({\boldsymbol {\theta }}^{(t)}|{\boldsymbol {\theta }}^{(t)})+H({\boldsymbol {\theta }}|{\boldsymbol {\theta }}^{(t)})-H({\boldsymbol {\theta }}^{(t)}|{\boldsymbol {\theta }}^{(t)})\,,} \log p(\mathbf{X}|\boldsymbol\theta) - \log p(\mathbf{X}|\boldsymbol\theta^{(t)}) = Q(\boldsymbol\theta|\boldsymbol\theta^{(t)}) - Q(\boldsymbol\theta^{(t)}|\boldsymbol\theta^{(t)}) + H(\boldsymbol\theta|\boldsymbol\theta^{(t)}) - H(\boldsymbol\theta^{(t)}|\boldsymbol\theta^{(t)}) \,, 

However, Gibbs' inequality tells us that H ( θ | θ ( t ) ) ≥ H ( θ ( t ) | θ ( t ) ) {\displaystyle H({\boldsymbol {\theta }}|{\boldsymbol {\theta }}^{(t)})\geq H({\boldsymbol {\theta }}^{(t)}|{\boldsymbol {\theta }}^{(t)})} H(\boldsymbol\theta|\boldsymbol\theta^{(t)}) \ge H(\boldsymbol\theta^{(t)}|\boldsymbol\theta^{(t)}) , so we can conclude that

        log ⁡ p ( X | θ ) − log ⁡ p ( X | θ ( t ) ) ≥ Q ( θ | θ ( t ) ) − Q ( θ ( t ) | θ ( t ) ) . {\displaystyle \log p(\mathbf {X} |{\boldsymbol {\theta }})-\log p(\mathbf {X} |{\boldsymbol {\theta }}^{(t)})\geq Q({\boldsymbol {\theta }}|{\boldsymbol {\theta }}^{(t)})-Q({\boldsymbol {\theta }}^{(t)}|{\boldsymbol {\theta }}^{(t)})\,.} \log p(\mathbf{X}|\boldsymbol\theta) - \log p(\mathbf{X}|\boldsymbol\theta^{(t)}) \ge Q(\boldsymbol\theta|\boldsymbol\theta^{(t)}) - Q(\boldsymbol\theta^{(t)}|\boldsymbol\theta^{(t)}) \,. 

In words, choosing θ {\displaystyle {\boldsymbol {\theta }}} {\boldsymbol {\theta }} to improve Q ( θ | θ ( t ) ) {\displaystyle Q({\boldsymbol {\theta }}|{\boldsymbol {\theta }}^{(t)})} Q(\boldsymbol\theta|\boldsymbol\theta^{(t)}) beyond Q ( θ ( t ) | θ ( t ) ) {\displaystyle Q({\boldsymbol {\theta }}^{(t)}|{\boldsymbol {\theta }}^{(t)})} Q(\boldsymbol\theta^{(t)}|\boldsymbol\theta^{(t)}) cannot cause log ⁡ p ( X | θ ) {\displaystyle \log p(\mathbf {X} |{\boldsymbol {\theta }})} \log p(\mathbf{X}|\boldsymbol\theta) to decrease below log ⁡ p ( X | θ ( t ) ) {\displaystyle \log p(\mathbf {X} |{\boldsymbol {\theta }}^{(t)})} \log p(\mathbf{X}|\boldsymbol\theta^{(t)}) , and so the marginal likelihood of the data is non-decreasing.
As a maximization-maximization procedure [ edit ]

The EM algorithm can be viewed as two alternating maximization steps, that is, as an example of coordinate ascent . [14] [15] Consider the function:

    F ( q , θ ) := E q ⁡ [ log ⁡ L ( θ ; x , Z ) ] + H ( q ) , {\displaystyle F(q,\theta ):=\operatorname {E} _{q}[\log L(\theta ;x,Z)]+H(q),} {\displaystyle F(q,\theta ):=\operatorname {E} _{q}[\log L(\theta ;x,Z)]+H(q),} 

where q is an arbitrary probability distribution over the unobserved data z and H(q) is the entropy of the distribution q . This function can be written as

    F ( q , θ ) = − D K L ( q ‖ p Z | X ( ⋅ | x ; θ ) ) + log ⁡ L ( θ ; x ) , {\displaystyle F(q,\theta )=-D_{\mathrm {KL} }{\big (}q{\big \|}p_{Z|X}(\cdot |x;\theta ){\big )}+\log L(\theta ;x),} {\displaystyle F(q,\theta )=-D_{\mathrm {KL} }{\big (}q{\big \|}p_{Z|X}(\cdot |x;\theta ){\big )}+\log L(\theta ;x),} 

where p Z | X ( ⋅ | x ; θ ) {\displaystyle p_{Z|X}(\cdot |x;\theta )} {\displaystyle p_{Z|X}(\cdot |x;\theta )} is the conditional distribution of the unobserved data given the observed data x {\displaystyle x} x and D K L {\displaystyle D_{KL}} {\displaystyle D_{KL}} is the Kullback–Leibler divergence .

Then the steps in the EM algorithm may be viewed as:

    Expectation step : Choose q {\displaystyle q} q to maximize F {\displaystyle F} F :

        q ( t ) = a r g m a x q ⁡   F ( q , θ ( t ) ) {\displaystyle q^{(t)}=\operatorname {arg\,max} _{q}\ F(q,\theta ^{(t)})} {\displaystyle q^{(t)}=\operatorname {arg\,max} _{q}\ F(q,\theta ^{(t)})} 

    Maximization step : Choose θ {\displaystyle \theta } \theta to maximize F {\displaystyle F} F :

        θ ( t + 1 ) = a r g m a x θ ⁡   F ( q ( t ) , θ ) {\displaystyle \theta ^{(t+1)}=\operatorname {arg\,max} _{\theta }\ F(q^{(t)},\theta )} {\displaystyle \theta ^{(t+1)}=\operatorname {arg\,max} _{\theta }\ F(q^{(t)},\theta )} 

Applications [ edit ]

EM is frequently used for data clustering in machine learning and computer vision . In natural language processing , two prominent instances of the algorithm are the Baum-Welch algorithm for hidden Markov models , and the inside-outside algorithm for unsupervised induction of probabilistic context-free grammars .

EM is frequently used for parameter estimation of mixed models [16] [17] , notably in quantitative genetics [18] .

In psychometrics , EM is almost indispensable for estimating item parameters and latent abilities of item response theory models.

With the ability to deal with missing data and observe unidentified variables, EM is becoming a useful tool to price and manage risk of a portfolio. [ citation needed ]

The EM algorithm (and its faster variant ordered subset expectation maximization ) is also widely used in medical image reconstruction, especially in positron emission tomography and single photon emission computed tomography . See below for other faster variants of EM.

In structural engineering , the Structural Identification using Expectation Maximization (STRIDE) [19] algorithm is an output-only method for identifying natural vibration properties of a structural system using sensor data (see Operational Modal Analysis ).
Filtering and smoothing EM algorithms [ edit ]

A Kalman filter is typically used for on-line state estimation and a minimum-variance smoother may be employed for off-line or batch state estimation. However, these minimum-variance solutions require estimates of the state-space model parameters. EM algorithms can be used for solving joint state and parameter estimation problems.

Filtering and smoothing EM algorithms arise by repeating this two-step procedure:

E-step
    Operate a Kalman filter or a minimum-variance smoother designed with current parameter estimates to obtain updated state estimates.

M-step
    Use the filtered or smoothed state estimates within maximum-likelihood calculations to obtain updated parameter estimates.

Suppose that a Kalman filter or minimum-variance smoother operates on measurements of a single-input-single-output system that possess additive white noise. An updated measurement noise variance estimate can be obtained from the maximum likelihood calculation

    σ ^ v 2 = 1 N ∑ k = 1 N ( z k − x ^ k ) 2 {\displaystyle {\hat {\sigma }}_{v}^{2}={\frac {1}{N}}\sum _{k=1}^{N}{(z_{k}-{\hat {x}}_{k})}^{2}} \hat{\sigma}^{2}_v = \frac{1}{N} \sum_{k=1}^N {(z_k-\hat{x}_{k})}^{2} 

where x ^ k {\displaystyle {\hat {x}}_{k}} \hat{x}_k are scalar output estimates calculated by a filter or a smoother from N scalar measurements z k {\displaystyle {z_{k}}} {z_k} . The above update can also be applied to updating a Poisson measurement noise intensity. Similarly, for a first-order auto-regressive process, an updated process noise variance estimate can be calculated by

    σ ^ w 2 = 1 N ∑ k = 1 N ( x ^ k + 1 − F ^ x ^ k ) 2 {\displaystyle {\hat {\sigma }}_{w}^{2}={\frac {1}{N}}\sum _{k=1}^{N}{({\hat {x}}_{k+1}-{\hat {F}}{\hat {x}}_{k})}^{2}} \hat{\sigma}^{2}_w = \frac{1}{N} \sum_{k=1}^N {(\hat{x}_{k+1}-\hat{F}\hat{{x}}_{k})}^{2} 

where x ^ k {\displaystyle {\hat {x}}_{k}} \hat{x}_k and x ^ k + 1 {\displaystyle {\hat {x}}_{k+1}} \hat{x}_{k+1} are scalar state estimates calculated by a filter or a smoother. The updated model coefficient estimate is obtained via

    F ^ = ∑ k = 1 N ( x ^ k + 1 − F ^ x ^ k ) ∑ k = 1 N x ^ k 2 {\displaystyle {\hat {F}}={\frac {\sum _{k=1}^{N}({\hat {x}}_{k+1}-{\hat {F}}{\hat {x}}_{k})}{\sum _{k=1}^{N}{\hat {x}}_{k}^{2}}}} \hat{F} = \frac{\sum_{k=1}^N (\hat{x}_{k+1}-\hat{F} \hat{x}_k)}{\sum_{k=1}^N \hat{x}_k^{2}} .

The convergence of parameter estimates such as those above are well studied. [20] [21] [22] [23]
Variants [ edit ]

A number of methods have been proposed to accelerate the sometimes slow convergence of the EM algorithm, such as those using conjugate gradient and modified Newton's methods (Newton–Raphson). [24] Also, EM can be used with constrained estimation methods.

Parameter-expanded expectation maximization (PX-EM) algorithm often provides speed up by "us[ing] a `covariance adjustment' to correct the analysis of the M step, capitalising on extra information captured in the imputed complete data" [25] .

Expectation conditional maximization (ECM) replaces each M step with a sequence of conditional maximization (CM) steps in which each parameter θ i is maximized individually, conditionally on the other parameters remaining fixed. [26] Itself can be extended into the Expectation conditional maximization either (ECME) algorithm [27] .

This idea is further extended in generalized expectation maximization (GEM) algorithm, in which is sought only an increase in the objective function F for both the E step and M step as described in the As a maximization-maximization procedure section. [14] GEM is further developed in a distributed environment and shows promising results. [28]

It is also possible to consider the EM algorithm as a subclass of the MM (Majorize/Minimize or Minorize/Maximize, depending on context) algorithm, [29] and therefore use any machinery developed in the more general case.
α-EM algorithm [ edit ]

The Q-function used in the EM algorithm is based on the log likelihood. Therefore, it is regarded as the log-EM algorithm. The use of the log likelihood can be generalized to that of the α-log likelihood ratio. Then, the α-log likelihood ratio of the observed data can be exactly expressed as equality by using the Q-function of the α-log likelihood ratio and the α-divergence. Obtaining this Q-function is a generalized E step. Its maximization is a generalized M step. This pair is called the α-EM algorithm [30] which contains the log-EM algorithm as its subclass. Thus, the α-EM algorithm by Yasuo Matsuyama is an exact generalization of the log-EM algorithm. No computation of gradient or Hessian matrix is needed. The α-EM shows faster convergence than the log-EM algorithm by choosing an appropriate α. The α-EM algorithm leads to a faster version of the Hidden Markov model estimation algorithm α-HMM. [31]
Relation to variational Bayes methods [ edit ]

EM is a partially non-Bayesian, maximum likelihood method. Its final result gives a probability distribution over the latent variables (in the Bayesian style) together with a point estimate for θ (either a maximum likelihood estimate or a posterior mode). A fully Bayesian version of this may be wanted, giving a probability distribution over θ and the latent variables. The Bayesian approach to inference is simply to treat θ as another latent variable. In this paradigm, the distinction between the E and M steps disappears. If using the factorized Q approximation as described above ( variational Bayes ), solving can iterate over each latent variable (now including θ ) and optimize them one at a time. Now, k steps per iteration are needed, where k is the number of latent variables. For graphical models this is easy to do as each variable's new Q depends only on its Markov blanket , so local message passing can be used for efficient inference.
Geometric interpretation [ edit ]
Further information: Information geometry

In information geometry , the E step and the M step are interpreted as projections under dual affine connections , called the e-connection and the m-connection; the Kullback–Leibler divergence can also be understood in these terms.
Examples [ edit ]
Gaussian mixture [ edit ]
Comparison of k-means and EM on artificial Data visualized with ELKI . Using the Variances, the EM algorithm can describe the normal distributions exact, while k-Means splits the data in Voronoi -Cells. The Cluster center is visualized by the lighter, bigger Symbol.
An animation demonstrating the EM algorithm fitting a two component Gaussian mixture model to the Old Faithful dataset. The algorithm steps through from a random initialization to convergence.

Let x = ( x 1 , x 2 , … , x n ) {\displaystyle \mathbf {x} =(\mathbf {x} _{1},\mathbf {x} _{2},\ldots ,\mathbf {x} _{n})} \mathbf{x} = (\mathbf{x}_1,\mathbf{x}_2,\ldots,\mathbf{x}_n) be a sample of n {\displaystyle n} n independent observations from a mixture of two multivariate normal distributions of dimension d {\displaystyle d} d , and let z = ( z 1 , z 2 , … , z n ) {\displaystyle \mathbf {z} =(z_{1},z_{2},\ldots ,z_{n})} \mathbf{z} = (z_1,z_2,\ldots,z_n) be the latent variables that determine the component from which the observation originates. [15]

    X i | ( Z i = 1 ) ∼ N d ( μ 1 , Σ 1 ) {\displaystyle X_{i}|(Z_{i}=1)\sim {\mathcal {N}}_{d}({\boldsymbol {\mu }}_{1},\Sigma _{1})} X_i |(Z_i = 1) \sim \mathcal{N}_d(\boldsymbol{\mu}_1,\Sigma_1) and X i | ( Z i = 2 ) ∼ N d ( μ 2 , Σ 2 ) {\displaystyle X_{i}|(Z_{i}=2)\sim {\mathcal {N}}_{d}({\boldsymbol {\mu }}_{2},\Sigma _{2})} X_i |(Z_i = 2) \sim \mathcal{N}_d(\boldsymbol{\mu}_2,\Sigma_2) 

where

    P ⁡ ( Z i = 1 ) = τ 1 {\displaystyle \operatorname {P} (Z_{i}=1)=\tau _{1}\,} \operatorname{P} (Z_i = 1 ) = \tau_1 \, and P ⁡ ( Z i = 2 ) = τ 2 = 1 − τ 1 {\displaystyle \operatorname {P} (Z_{i}=2)=\tau _{2}=1-\tau _{1}} \operatorname{P} (Z_i=2) = \tau_2 = 1-\tau_1 

The aim is to estimate the unknown parameters representing the mixing value between the Gaussians and the means and covariances of each:

    θ = ( τ , μ 1 , μ 2 , Σ 1 , Σ 2 ) {\displaystyle \theta ={\big (}{\boldsymbol {\tau }},{\boldsymbol {\mu }}_{1},{\boldsymbol {\mu }}_{2},\Sigma _{1},\Sigma _{2}{\big )}} \theta = \big( \boldsymbol{\tau},\boldsymbol{\mu}_1,\boldsymbol{\mu}_2,\Sigma_1,\Sigma_2 \big) 

where the incomplete-data likelihood function is

    L ( θ ; x ) = ∏ i = 1 n ∑ j = 1 2 τ j   f ( x i ; μ j , Σ j ) {\displaystyle L(\theta ;\mathbf {x} )=\prod _{i=1}^{n}\sum _{j=1}^{2}\tau _{j}\ f(\mathbf {x} _{i};{\boldsymbol {\mu }}_{j},\Sigma _{j})} L(\theta ;{\mathbf {x}})=\prod _{{i=1}}^{n}\sum _{{j=1}}^{2}\tau _{j}\ f({\mathbf {x}}_{i};{\boldsymbol {\mu }}_{j},\Sigma _{j}) ,

and the complete-data likelihood function is

    L ( θ ; x , z ) = p ( x , z | θ ) = ∏ i = 1 n ∏ j = 1 2   [ f ( x i ; μ j , Σ j ) τ j ] I ( z i = j ) {\displaystyle L(\theta ;\mathbf {x} ,\mathbf {z} )=p(\mathbf {x} ,\mathbf {z} \vert \theta )=\prod _{i=1}^{n}\prod _{j=1}^{2}\ [f(\mathbf {x} _{i};{\boldsymbol {\mu }}_{j},\Sigma _{j})\tau _{j}]^{\mathbb {I} (z_{i}=j)}} {\displaystyle L(\theta ;\mathbf {x} ,\mathbf {z} )=p(\mathbf {x} ,\mathbf {z} \vert \theta )=\prod _{i=1}^{n}\prod _{j=1}^{2}\ [f(\mathbf {x} _{i};{\boldsymbol {\mu }}_{j},\Sigma _{j})\tau _{j}]^{\mathbb {I} (z_{i}=j)}} 

or

    L ( θ ; x , z ) = exp ⁡ { ∑ i = 1 n ∑ j = 1 2 I ( z i = j ) [ log ⁡ τ j − 1 2 log ⁡ | Σ j | − 1 2 ( x i − μ j ) ⊤ Σ j − 1 ( x i − μ j ) − d 2 log ⁡ ( 2 π ) ] } . {\displaystyle L(\theta ;\mathbf {x} ,\mathbf {z} )=\exp \left\{\sum _{i=1}^{n}\sum _{j=1}^{2}\mathbb {I} (z_{i}=j){\big [}\log \tau _{j}-{\tfrac {1}{2}}\log |\Sigma _{j}|-{\tfrac {1}{2}}(\mathbf {x} _{i}-{\boldsymbol {\mu }}_{j})^{\top }\Sigma _{j}^{-1}(\mathbf {x} _{i}-{\boldsymbol {\mu }}_{j})-{\tfrac {d}{2}}\log(2\pi ){\big ]}\right\}.} L(\theta;\mathbf{x},\mathbf{z}) = \exp \left\{ \sum_{i=1}^n \sum_{j=1}^2 \mathbb{I}(z_i=j) \big[ \log \tau_j -\tfrac{1}{2} \log |\Sigma_j| -\tfrac{1}{2}(\mathbf{x}_i-\boldsymbol{\mu}_j)^\top\Sigma_j^{-1} (\mathbf{x}_i-\boldsymbol{\mu}_j) -\tfrac{d}{2} \log(2\pi) \big] \right\}. 

where I {\displaystyle \mathbb {I} } \mathbb {I} is an indicator function and f {\displaystyle f} f is the probability density function of a multivariate normal.

To see the last equality, then for each i all indicators I ( z i = j ) {\displaystyle \mathbb {I} (z_{i}=j)} \mathbb{I}(z_i=j) are equal to zero, except for one which is equal to one. The inner sum thus reduces to one term.
E step [ edit ]

Given our current estimate of the parameters θ ( t ) , the conditional distribution of the Z i is determined by Bayes theorem to be the proportional height of the normal density weighted by τ :

    T j , i ( t ) := P ⁡ ( Z i = j | X i = x i ; θ ( t ) ) = τ j ( t )   f ( x i ; μ j ( t ) , Σ j ( t ) ) τ 1 ( t )   f ( x i ; μ 1 ( t ) , Σ 1 ( t ) ) + τ 2 ( t )   f ( x i ; μ 2 ( t ) , Σ 2 ( t ) ) {\displaystyle T_{j,i}^{(t)}:=\operatorname {P} (Z_{i}=j|X_{i}=\mathbf {x} _{i};\theta ^{(t)})={\frac {\tau _{j}^{(t)}\ f(\mathbf {x} _{i};{\boldsymbol {\mu }}_{j}^{(t)},\Sigma _{j}^{(t)})}{\tau _{1}^{(t)}\ f(\mathbf {x} _{i};{\boldsymbol {\mu }}_{1}^{(t)},\Sigma _{1}^{(t)})+\tau _{2}^{(t)}\ f(\mathbf {x} _{i};{\boldsymbol {\mu }}_{2}^{(t)},\Sigma _{2}^{(t)})}}} T_{j,i}^{(t)} := \operatorname{P}(Z_i=j | X_i=\mathbf{x}_i ;\theta^{(t)}) = \frac{\tau_j^{(t)} \ f(\mathbf{x}_i;\boldsymbol{\mu}_j^{(t)},\Sigma_j^{(t)})}{\tau_1^{(t)} \ f(\mathbf{x}_i;\boldsymbol{\mu}_1^{(t)},\Sigma_1^{(t)}) + \tau_2^{(t)} \ f(\mathbf{x}_i;\boldsymbol{\mu}_2^{(t)},\Sigma_2^{(t)})} .

These are called the "membership probabilities" which are normally considered the output of the E step (although this is not the Q function of below).

This E step corresponds with setting up this function for Q:

    Q ( θ | θ ( t ) ) = E Z | X , θ ( t ) ⁡ [ log ⁡ L ( θ ; x , Z ) ] = E Z | X , θ ( t ) ⁡ [ log ⁡ ∏ i = 1 n L ( θ ; x i , z i ) ] = E Z | X , θ ( t ) ⁡ [ ∑ i = 1 n log ⁡ L ( θ ; x i , z i ) ] = ∑ i = 1 n E Z | X ; θ ( t ) ⁡ [ log ⁡ L ( θ ; x i , z i ) ] = ∑ i = 1 n ∑ j = 1 2 P ( Z i = j | X i = x i ; θ ( t ) ) log ⁡ L ( θ j ; x i , z i ) = ∑ i = 1 n ∑ j = 1 2 T j , i ( t ) [ log ⁡ τ j − 1 2 log ⁡ | Σ j | − 1 2 ( x i − μ j ) ⊤ Σ j − 1 ( x i − μ j ) − d 2 log ⁡ ( 2 π ) ] {\displaystyle {\begin{aligned}Q(\theta |\theta ^{(t)})&=\operatorname {E} _{\mathbf {Z} |\mathbf {X} ,\mathbf {\theta } ^{(t)}}[\log L(\theta ;\mathbf {x} ,\mathbf {Z} )]\\&=\operatorname {E} _{\mathbf {Z} |\mathbf {X} ,\mathbf {\theta } ^{(t)}}[\log \prod _{i=1}^{n}L(\theta ;\mathbf {x} _{i},\mathbf {z} _{i})]\\&=\operatorname {E} _{\mathbf {Z} |\mathbf {X} ,\mathbf {\theta } ^{(t)}}[\sum _{i=1}^{n}\log L(\theta ;\mathbf {x} _{i},\mathbf {z} _{i})]\\&=\sum _{i=1}^{n}\operatorname {E} _{\mathbf {Z} |\mathbf {X} ;\mathbf {\theta } ^{(t)}}[\log L(\theta ;\mathbf {x} _{i},\mathbf {z} _{i})]\\&=\sum _{i=1}^{n}\sum _{j=1}^{2}P(Z_{i}=j|X_{i}=\mathbf {x} _{i};\theta ^{(t)})\log L(\theta _{j};\mathbf {x} _{i},\mathbf {z} _{i})\\&=\sum _{i=1}^{n}\sum _{j=1}^{2}T_{j,i}^{(t)}{\big [}\log \tau _{j}-{\tfrac {1}{2}}\log |\Sigma _{j}|-{\tfrac {1}{2}}(\mathbf {x} _{i}-{\boldsymbol {\mu }}_{j})^{\top }\Sigma _{j}^{-1}(\mathbf {x} _{i}-{\boldsymbol {\mu }}_{j})-{\tfrac {d}{2}}\log(2\pi ){\big ]}\end{aligned}}} {\displaystyle {\begin{aligned}Q(\theta |\theta ^{(t)})&=\operatorname {E} _{\mathbf {Z} |\mathbf {X} ,\mathbf {\theta } ^{(t)}}[\log L(\theta ;\mathbf {x} ,\mathbf {Z} )]\\&=\operatorname {E} _{\mathbf {Z} |\mathbf {X} ,\mathbf {\theta } ^{(t)}}[\log \prod _{i=1}^{n}L(\theta ;\mathbf {x} _{i},\mathbf {z} _{i})]\\&=\operatorname {E} _{\mathbf {Z} |\mathbf {X} ,\mathbf {\theta } ^{(t)}}[\sum _{i=1}^{n}\log L(\theta ;\mathbf {x} _{i},\mathbf {z} _{i})]\\&=\sum _{i=1}^{n}\operatorname {E} _{\mathbf {Z} |\mathbf {X} ;\mathbf {\theta } ^{(t)}}[\log L(\theta ;\mathbf {x} _{i},\mathbf {z} _{i})]\\&=\sum _{i=1}^{n}\sum _{j=1}^{2}P(Z_{i}=j|X_{i}=\mathbf {x} _{i};\theta ^{(t)})\log L(\theta _{j};\mathbf {x} _{i},\mathbf {z} _{i})\\&=\sum _{i=1}^{n}\sum _{j=1}^{2}T_{j,i}^{(t)}{\big [}\log \tau _{j}-{\tfrac {1}{2}}\log |\Sigma _{j}|-{\tfrac {1}{2}}(\mathbf {x} _{i}-{\boldsymbol {\mu }}_{j})^{\top }\Sigma _{j}^{-1}(\mathbf {x} _{i}-{\boldsymbol {\mu }}_{j})-{\tfrac {d}{2}}\log(2\pi ){\big ]}\end{aligned}}} 

Everything in the E step is known before the step is taken except T j , i {\displaystyle T_{j,i}} {\displaystyle T_{j,i}} , which is computed according to the equation at the beginning of the E step section.

This full conditional expectation does not need to be calculated in one step, because τ and μ / Σ appear in separate linear terms and can thus be maximized independently.
M step [ edit ]

Q ( θ | θ ( t ) ) being quadratic in form means that determining the maximizing values of θ is relatively straightforward. Also, τ , ( μ 1 , Σ 1 ) and ( μ 2 , Σ 2 ) may all be maximized independently since they all appear in separate linear terms.

To begin, consider τ , which has the constraint τ 1 + τ 2 =1:

    τ ( t + 1 ) = a r g m a x τ   Q ( θ | θ ( t ) ) = a r g m a x τ   { [ ∑ i = 1 n T 1 , i ( t ) ] log ⁡ τ 1 + [ ∑ i = 1 n T 2 , i ( t ) ] log ⁡ τ 2 } {\displaystyle {\begin{aligned}{\boldsymbol {\tau }}^{(t+1)}&={\underset {\boldsymbol {\tau }}{\operatorname {arg\,max} }}\ Q(\theta |\theta ^{(t)})\\&={\underset {\boldsymbol {\tau }}{\operatorname {arg\,max} }}\ \left\{\left[\sum _{i=1}^{n}T_{1,i}^{(t)}\right]\log \tau _{1}+\left[\sum _{i=1}^{n}T_{2,i}^{(t)}\right]\log \tau _{2}\right\}\end{aligned}}} \begin{align}\boldsymbol{\tau}^{(t+1)} &= \underset{\boldsymbol{\tau}} {\operatorname{arg\,max}}\ Q(\theta | \theta^{(t)} ) \\ &= \underset{\boldsymbol{\tau}} {\operatorname{arg\,max}} \ \left\{ \left[ \sum_{i=1}^n T_{1,i}^{(t)} \right] \log \tau_1 + \left[ \sum_{i=1}^n T_{2,i}^{(t)} \right] \log \tau_2 \right\} \end{align} 

This has the same form as the MLE for the binomial distribution , so

    τ j ( t + 1 ) = ∑ i = 1 n T j , i ( t ) ∑ i = 1 n ( T 1 , i ( t ) + T 2 , i ( t ) ) = 1 n ∑ i = 1 n T j , i ( t ) {\displaystyle \tau _{j}^{(t+1)}={\frac {\sum _{i=1}^{n}T_{j,i}^{(t)}}{\sum _{i=1}^{n}(T_{1,i}^{(t)}+T_{2,i}^{(t)})}}={\frac {1}{n}}\sum _{i=1}^{n}T_{j,i}^{(t)}} \tau^{(t+1)}_j = \frac{\sum_{i=1}^n T_{j,i}^{(t)}}{\sum_{i=1}^n (T_{1,i}^{(t)} + T_{2,i}^{(t)} ) } = \frac{1}{n} \sum_{i=1}^n T_{j,i}^{(t)} .

For the next estimates of ( μ 1 , Σ 1 ):

    ( μ 1 ( t + 1 ) , Σ 1 ( t + 1 ) ) = a r g m a x μ 1 , Σ 1   Q ( θ | θ ( t ) ) = a r g m a x μ 1 , Σ 1   ∑ i = 1 n T 1 , i ( t ) { − 1 2 log ⁡ | Σ 1 | − 1 2 ( x i − μ 1 ) ⊤ Σ 1 − 1 ( x i − μ 1 ) } {\displaystyle {\begin{aligned}({\boldsymbol {\mu }}_{1}^{(t+1)},\Sigma _{1}^{(t+1)})&={\underset {{\boldsymbol {\mu }}_{1},\Sigma _{1}}{\operatorname {arg\,max} }}\ Q(\theta |\theta ^{(t)})\\&={\underset {{\boldsymbol {\mu }}_{1},\Sigma _{1}}{\operatorname {arg\,max} }}\ \sum _{i=1}^{n}T_{1,i}^{(t)}\left\{-{\tfrac {1}{2}}\log |\Sigma _{1}|-{\tfrac {1}{2}}(\mathbf {x} _{i}-{\boldsymbol {\mu }}_{1})^{\top }\Sigma _{1}^{-1}(\mathbf {x} _{i}-{\boldsymbol {\mu }}_{1})\right\}\end{aligned}}} \begin{align}(\boldsymbol{\mu}_1^{(t+1)},\Sigma_1^{(t+1)}) &= \underset{\boldsymbol{\mu}_1,\Sigma_1} {\operatorname{arg\,max}}\ Q(\theta | \theta^{(t)} ) \\ &= \underset{\boldsymbol{\mu}_1,\Sigma_1} {\operatorname{arg\,max}}\ \sum_{i=1}^n T_{1,i}^{(t)} \left\{ -\tfrac{1}{2} \log |\Sigma_1| -\tfrac{1}{2}(\mathbf{x}_i-\boldsymbol{\mu}_1)^\top\Sigma_1^{-1} (\mathbf{x}_i-\boldsymbol{\mu}_1) \right\} \end{align} .

This has the same form as a weighted MLE for a normal distribution, so

    μ 1 ( t + 1 ) = ∑ i = 1 n T 1 , i ( t ) x i ∑ i = 1 n T 1 , i ( t ) {\displaystyle {\boldsymbol {\mu }}_{1}^{(t+1)}={\frac {\sum _{i=1}^{n}T_{1,i}^{(t)}\mathbf {x} _{i}}{\sum _{i=1}^{n}T_{1,i}^{(t)}}}} \boldsymbol{\mu}_1^{(t+1)} = \frac{\sum_{i=1}^n T_{1,i}^{(t)} \mathbf{x}_i}{\sum_{i=1}^n T_{1,i}^{(t)}} and Σ 1 ( t + 1 ) = ∑ i = 1 n T 1 , i ( t ) ( x i − μ 1 ( t + 1 ) ) ( x i − μ 1 ( t + 1 ) ) ⊤ ∑ i = 1 n T 1 , i ( t ) {\displaystyle \Sigma _{1}^{(t+1)}={\frac {\sum _{i=1}^{n}T_{1,i}^{(t)}(\mathbf {x} _{i}-{\boldsymbol {\mu }}_{1}^{(t+1)})(\mathbf {x} _{i}-{\boldsymbol {\mu }}_{1}^{(t+1)})^{\top }}{\sum _{i=1}^{n}T_{1,i}^{(t)}}}} \Sigma_1^{(t+1)} = \frac{\sum_{i=1}^n T_{1,i}^{(t)} (\mathbf{x}_i - \boldsymbol{\mu}_1^{(t+1)}) (\mathbf{x}_i - \boldsymbol{\mu}_1^{(t+1)})^\top }{\sum_{i=1}^n T_{1,i}^{(t)}} 

and, by symmetry

    μ 2 ( t + 1 ) = ∑ i = 1 n T 2 , i ( t ) x i ∑ i = 1 n T 2 , i ( t ) {\displaystyle {\boldsymbol {\mu }}_{2}^{(t+1)}={\frac {\sum _{i=1}^{n}T_{2,i}^{(t)}\mathbf {x} _{i}}{\sum _{i=1}^{n}T_{2,i}^{(t)}}}} \boldsymbol{\mu}_2^{(t+1)} = \frac{\sum_{i=1}^n T_{2,i}^{(t)} \mathbf{x}_i}{\sum_{i=1}^n T_{2,i}^{(t)}} and Σ 2 ( t + 1 ) = ∑ i = 1 n T 2 , i ( t ) ( x i − μ 2 ( t + 1 ) ) ( x i − μ 2 ( t + 1 ) ) ⊤ ∑ i = 1 n T 2 , i ( t ) {\displaystyle \Sigma _{2}^{(t+1)}={\frac {\sum _{i=1}^{n}T_{2,i}^{(t)}(\mathbf {x} _{i}-{\boldsymbol {\mu }}_{2}^{(t+1)})(\mathbf {x} _{i}-{\boldsymbol {\mu }}_{2}^{(t+1)})^{\top }}{\sum _{i=1}^{n}T_{2,i}^{(t)}}}} \Sigma_2^{(t+1)} = \frac{\sum_{i=1}^n T_{2,i}^{(t)} (\mathbf{x}_i - \boldsymbol{\mu}_2^{(t+1)}) (\mathbf{x}_i - \boldsymbol{\mu}_2^{(t+1)})^\top }{\sum_{i=1}^n T_{2,i}^{(t)}} .

Termination [ edit ]

Conclude the iterative process if E Z | θ ( t ) , x [ log ⁡ L ( θ ( t ) ; x , Z ) ] ≤ E Z | θ ( t − 1 ) , x [ log ⁡ L ( θ ( t − 1 ) ; x , Z ) ] + ϵ {\displaystyle E_{Z|\theta ^{(t)},\mathbf {x} }[\log L(\theta ^{(t)};\mathbf {x} ,\mathbf {Z} )]\leq E_{Z|\theta ^{(t-1)},\mathbf {x} }[\log L(\theta ^{(t-1)};\mathbf {x} ,\mathbf {Z} )]+\epsilon } {\displaystyle E_{Z|\theta ^{(t)},\mathbf {x} }[\log L(\theta ^{(t)};\mathbf {x} ,\mathbf {Z} )]\leq E_{Z|\theta ^{(t-1)},\mathbf {x} }[\log L(\theta ^{(t-1)};\mathbf {x} ,\mathbf {Z} )]+\epsilon } for ϵ {\displaystyle \epsilon } \epsilon below some preset threshold.
Generalization [ edit ]

The algorithm illustrated above can be generalized for mixtures of more than two multivariate normal distributions .
Truncated and censored regression [ edit ]

The EM algorithm has been implemented in the case where an underlying linear regression model exists explaining the variation of some quantity, but where the values actually observed are censored or truncated versions of those represented in the model. [32] Special cases of this model include censored or truncated observations from one normal distribution . [32]
Alternatives [ edit ]

EM typically converges to a local optimum, not necessarily the global optimum, with no bound on the convergence rate in general. It is possible that it can be arbitrarily poor in high dimensions and there can be an exponential number of local optima. Hence, a need exists for alternative methods for guaranteed learning, especially in the high-dimensional setting. Alternatives to EM exist with better guarantees for consistency, which are termed moment-based approaches or the so-called spectral techniques . Moment-based approaches to learning the parameters of a probabilistic model are of increasing interest recently since they enjoy guarantees such as global convergence under certain conditions unlike EM which is often plagued by the issue of getting stuck in local optima. Algorithms with guarantees for learning can be derived for a number of important models such as mixture models, HMMs etc. For these spectral methods, no spurious local optima occur, and the true parameters can be consistently estimated under some regularity conditions.
See also [ edit ]

    mixture distribution
    compound distribution
    density estimation
    total absorption spectroscopy
    The EM algorithm can be viewed as a special case of the majorize-minimization (MM) algorithm . [33]

Further reading [ edit ]

    Robert Hogg, Joseph McKean and Allen Craig . Introduction to Mathematical Statistics . pp. 359–364. Upper Saddle River, NJ: Pearson Prentice Hall, 2005.
    The on-line textbook: Information Theory, Inference, and Learning Algorithms , by David J.C. MacKay includes simple examples of the EM algorithm such as clustering using the soft k -means algorithm, and emphasizes the variational view of the EM algorithm, as described in Chapter 33.7 of version 7.2 (fourth edition).
    Dellaert, Frank . "The Expectation Maximization Algorithm". CiteSeerX   10.1.1.9.9735  Freely accessible .   gives an easier explanation of EM algorithm as to lowerbound maximization.
    Bishop, Christopher M. (2006). Pattern Recognition and Machine Learning . Springer. ISBN   0-387-31073-8 .  
    M. R. Gupta; Y. Chen (2010). Theory and Use of the EM Algorithm . doi : 10.1561/2000000034 .   A well-written short book on EM, including detailed derivation of EM for GMMs, HMMs, and Dirichlet.
    Bilmes, Jeff. "A Gentle Tutorial of the EM Algorithm and its Application to Parameter Estimation for Gaussian Mixture and Hidden Markov Models". CiteSeerX   10.1.1.28.613  Freely accessible .   includes a simplified derivation of the EM equations for Gaussian Mixtures and Gaussian Mixture Hidden Markov Models.
    Variational Algorithms for Approximate Bayesian Inference , by M. J. Beal includes comparisons of EM to Variational Bayesian EM and derivations of several models including Variational Bayesian HMMs ( chapters ).
    The Expectation Maximization Algorithm: A short tutorial , A self-contained derivation of the EM Algorithm by Sean Borman.
    The EM Algorithm , by Xiaojin Zhu.
    EM algorithm and variants: an informal tutorial by Alexis Roche. A concise and very clear description of EM and many interesting variants.
    Einicke, G.A. (2012). Smoothing, Filtering and Prediction: Estimating the Past, Present and Future . Rijeka, Croatia: Intech. ISBN   978-953-307-752-9 .  

References [ edit ]

    Jump up ^ Dempster, A.P. ; Laird, N.M. ; Rubin, D.B. (1977). "Maximum Likelihood from Incomplete Data via the EM Algorithm". Journal of the Royal Statistical Society, Series B . 39 (1): 1–38. JSTOR   2984875 . MR   0501537 .  
    Jump up ^ Sundberg, Rolf (1974). "Maximum likelihood theory for incomplete data from an exponential family". Scandinavian Journal of Statistics . 1 (2): 49–58. JSTOR   4615553 . MR   0381110 .  
    ^ Jump up to: a b Rolf Sundberg. 1971. Maximum likelihood theory and applications for distributions generated when observing a function of an exponential family variable . Dissertation, Institute for Mathematical Statistics, Stockholm University.
    ^ Jump up to: a b Sundberg, Rolf (1976). "An iterative method for solution of the likelihood equations for incomplete data from exponential families". Communications in Statistics – Simulation and Computation . 5 (1): 55–64. doi : 10.1080/03610917608812007 . MR   0443190 .  
    Jump up ^ See the acknowledgement by Dempster, Laird and Rubin on pages 3, 5 and 11.
    Jump up ^ G. Kulldorff. 1961. Contributions to the theory of estimation from grouped and partially grouped samples . Almqvist & Wiksell.
    ^ Jump up to: a b Anders Martin-Löf. 1963. "Utvärdering av livslängder i subnanosekundsområdet" ("Evaluation of sub-nanosecond lifetimes"). ("Sundberg formula")
    ^ Jump up to: a b Per Martin-Löf . 1966. Statistics from the point of view of statistical mechanics . Lecture notes, Mathematical Institute, Aarhus University. ("Sundberg formula" credited to Anders Martin-Löf).
    ^ Jump up to: a b Per Martin-Löf . 1970. Statistika Modeller (Statistical Models): Anteckningar från seminarier läsåret 1969–1970 (Notes from seminars in the academic year 1969-1970), with the assistance of Rolf Sundberg. Stockholm University. ("Sundberg formula")
    ^ Jump up to: a b Martin-Löf, P. The notion of redundancy and its use as a quantitative measure of the deviation between a statistical hypothesis and a set of observational data. With a discussion by F. Abildgård, A. P. Dempster , D. Basu , D. R. Cox , A. W. F. Edwards , D. A. Sprott, G. A. Barnard , O. Barndorff-Nielsen, J. D. Kalbfleisch and G. Rasch and a reply by the author. Proceedings of Conference on Foundational Questions in Statistical Inference (Aarhus, 1973), pp. 1–42. Memoirs, No. 1, Dept. Theoret. Statist., Inst. Math., Univ. Aarhus, Aarhus, 1974.
    ^ Jump up to: a b Martin-Löf, Per (1974). "The notion of redundancy and its use as a quantitative measure of the discrepancy between a statistical hypothesis and a set of observational data". Scand. J. Statist . 1 (1): 3–18.  
    ^ Jump up to: a b c Wu, C. F. Jeff (Mar 1983). "On the Convergence Properties of the EM Algorithm". Annals of Statistics . 11 (1): 95–103. doi : 10.1214/aos/1176346060 . JSTOR   2240463 . MR   0684867 .  
    Jump up ^ Little, Roderick J.A.; Rubin, Donald B. (1987). Statistical Analysis with Missing Data . Wiley Series in Probability and Mathematical Statistics. New York: John Wiley & Sons. pp. 134–136. ISBN   0-471-80254-9 .  
    ^ Jump up to: a b Neal, Radford; Hinton, Geoffrey (1999). Michael I. Jordan , ed. "A view of the EM algorithm that justifies incremental, sparse, and other variants" (PDF) . Learning in Graphical Models . Cambridge, MA: MIT Press: 355–368. ISBN   0-262-60032-3 . Retrieved 2009-03-22 .  
    ^ Jump up to: a b Hastie, Trevor ; Tibshirani, Robert ; Friedman, Jerome (2001). "8.5 The EM algorithm". The Elements of Statistical Learning . New York: Springer. pp. 236–243. ISBN   0-387-95284-5 .  
    Jump up ^ Lindstrom, Mary J; Bates, Douglas M (1988). "Newton—Raphson and EM Algorithms for Linear Mixed-Effects Models for Repeated-Measures Data". Journal of the American Statistical Association . 83 (404): 1014. doi : 10.1080/01621459.1988.10478693 .  
    Jump up ^ Van Dyk, David A (2000). "Fitting Mixed-Effects Models Using Efficient EM-Type Algorithms". Journal of Computational and Graphical Statistics . 9 : 78. doi : 10.2307/1390614 . JSTOR   1390614 .  
    Jump up ^ Diffey, S. M; Smith, A. B; Welsh, A. H; Cullis, B. R (2017). "A new REML (parameter expanded) EM algorithm for linear mixed models". Australian & New Zealand Journal of Statistics . 59 (4): 433. doi : 10.1111/anzs.12208 .  
    Jump up ^ Matarazzo, T. J., and Pakzad, S. N. (2016). “STRIDE for Structural Identification using Expectation Maximization: Iterative Output-Only Method for Modal Identification.” Journal of Engineering Mechanics. http://ascelibrary.org/doi/abs/10.1061/(ASCE)EM.1943-7889.0000951
    Jump up ^ Einicke, G.A.; Malos, J.T.; Reid, D.C.; Hainsworth, D.W. (January 2009). "Riccati Equation and EM Algorithm Convergence for Inertial Navigation Alignment". IEEE Trans. Signal Processing . 57 (1): 370–375. Bibcode : 2009ITSP...57..370E . doi : 10.1109/TSP.2008.2007090 .  
    Jump up ^ Einicke, G.A.; Falco, G.; Malos, J.T. (May 2010). "EM Algorithm State Matrix Estimation for Navigation". IEEE Signal Processing Letters . 17 (5): 437–440. Bibcode : 2010ISPL...17..437E . doi : 10.1109/LSP.2010.2043151 .  
    Jump up ^ Einicke, G.A.; Falco, G.; Dunn, M.T.; Reid, D.C. (May 2012). "Iterative Smoother-Based Variance Estimation". IEEE Signal Processing Letters . 19 (5): 275–278. Bibcode : 2012ISPL...19..275E . doi : 10.1109/LSP.2012.2190278 .  
    Jump up ^ Einicke, G.A. (Sep 2015). "Iterative Filtering and Smoothing of Measurements Possessing Poisson Noise". IEEE Transactions on Aerospace and Electronic Systems . 51 (3): 2205–2011. Bibcode : 2015ITAES..51.2205E . doi : 10.1109/TAES.2015.140843 .  
    Jump up ^ Jamshidian, Mortaza; Jennrich, Robert I. (1997). "Acceleration of the EM Algorithm by using Quasi-Newton Methods". Journal of the Royal Statistical Society, Series B . 59 (2): 569–587. doi : 10.1111/1467-9868.00083 . MR   1452026 .  
    Jump up ^ Liu, C (1998). "Parameter expansion to accelerate EM: The PX-EM algorithm". Biometrika . 85 (4): 755. doi : 10.1093/biomet/85.4.755 .  
    Jump up ^ Meng, Xiao-Li; Rubin, Donald B. (1993). "Maximum likelihood estimation via the ECM algorithm: A general framework". Biometrika . 80 (2): 267–278. doi : 10.1093/biomet/80.2.267 . MR   1243503 .  
    Jump up ^ Liu, Chuanhai; Rubin, Donald B (1994). "The ECME Algorithm: A Simple Extension of EM and ECM with Faster Monotone Convergence". Biometrika . 81 (4): 633. doi : 10.2307/2337067 . JSTOR   2337067 .  
    Jump up ^ Jiangtao Yin; Yanfeng Zhang; Lixin Gao (2012). "Accelerating Expectation-Maximization Algorithms with Frequent Updates" (PDF) . Proceedings of the IEEE International Conference on Cluster Computing .  
    Jump up ^ Hunter DR and Lange K (2004), A Tutorial on MM Algorithms , The American Statistician, 58: 30-37
    Jump up ^ Matsuyama, Yasuo (2003). "The α-EM algorithm: Surrogate likelihood maximization using α-logarithmic information measures". IEEE Transactions on Information Theory . 49 (3): 692–706. doi : 10.1109/TIT.2002.808105 .  
    Jump up ^ Matsuyama, Yasuo (2011). "Hidden Markov model estimation based on alpha-EM algorithm: Discrete and continuous alpha-HMMs". International Joint Conference on Neural Networks : 808–816.  
    ^ Jump up to: a b Wolynetz, M.S. (1979). "Maximum likelihood estimation in a linear model from confined and censored normal data". Journal of the Royal Statistical Society, Series C . 28 (2): 195–206. doi : 10.2307/2346749 . JSTOR   2346749 .  
    Jump up ^ Lange, Kenneth. "The MM Algorithm" (PDF) .  

External links [ edit ]

    Various 1D, 2D and 3D demonstrations of EM together with Mixture Modeling are provided as part of the paired SOCR activities and applets. These applets and activities show empirically the properties of the EM algorithm for parameter estimation in diverse settings.
    k-MLE: A fast algorithm for learning statistical mixture models
    Class hierarchy in C++ (GPL) including Gaussian Mixtures
    Fast and clean implementation in C of the Expectation Maximization (EM) algorithm for estimating Gaussian Mixture Models (GMMs).

Retrieved from " https://en.wikipedia.org/w/index.php?title=Expectation–maximization_algorithm&oldid=851060462 "
Categories :

    Estimation methods
    Machine learning algorithms
    Missing data
    Statistical algorithms
    Optimization algorithms and methods
    Cluster analysis algorithms

Hidden categories:

    All articles with unsourced statements
    Articles with unsourced statements from November 2017

Navigation menu
Personal tools

    Not logged in
    Talk
    Contributions
    Create account
    Log in

Namespaces

    Article
    Talk

Variants

Views

    Read
    Edit
    View history

More

Search
Navigation

    Main page
    Contents
    Featured content
    Current events
    Random article
    Donate to Wikipedia
    Wikipedia store

Interaction

    Help
    About Wikipedia
    Community portal
    Recent changes
    Contact page

Tools

    What links here
    Related changes
    Upload file
    Special pages
    Permanent link
    Page information
    Wikidata item
    Cite this page

Print/export

    Create a book
    Download as PDF
    Printable version

Languages

    العربية
    Deutsch
    Español
    فارسی
    Français
    한국어
    עברית
    日本語
    Русский
    Српски / srpski
    Basa Sunda
    Suomi
    Українська
    Tiếng Việt
    中文
    6 more 

Edit links

    This page was last edited on 19 July 2018, at 19:59  (UTC) .
    Text is available under the Creative Commons Attribution-ShareAlike License ; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy . Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc. , a non-profit organization.

    Privacy policy
    About Wikipedia
    Disclaimers
    Contact Wikipedia
    Developers
    Cookie statement
    Mobile view
    Enable previews

    Wikimedia Foundation
    Powered by MediaWiki

