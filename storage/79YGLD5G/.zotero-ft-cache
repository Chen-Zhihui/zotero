
Skip to content
This repository

    Pull requests
    Issues
    Marketplace
    Explore

        New repository Import repository New gist New organization
        This repository
        New issue 
    @Chen-Zhihui
        Signed in as Chen-Zhihui
        Your profile
        Your stars
        Your gists
        Help
        Settings
        Sign out

Sign out

    Watch 2
    Notifications
    Not watching Be notified when participating or @mentioned. Watch
    Watching Be notified of all conversations. Unwatch
    Ignoring Never be notified. Stop ignoring
    Unstar 7
    Star 7
    Fork
    Where should we fork this repository?
    Loading
    3

USESystemEngineeringBV / cmake-eclipse-helper
Code Issues 0 Pull requests 0 Projects 0 Wiki Insights
Eclipse Plugin for supporting the developer using CMake.

    32 commits
    1 branch
    0 releases
    2 contributors
    EPL-1.0

    Java 100.0%

Java
Clone or download
Use SSH
Clone with HTTPS

Use Git or checkout with SVN using the web URL.
Use HTTPS
Clone with SSH

Use an SSH key and passphrase from account.
Download ZIP
Launching GitHub Desktop ...

If nothing happens, download GitHub Desktop and try again.

Go back
Launching GitHub Desktop ...

If nothing happens, download GitHub Desktop and try again.

Go back
Launching Xcode ...

If nothing happens, download Xcode and try again.

Go back
Launching Visual Studio ...

If nothing happens, download the GitHub extension for Visual Studio and try again.

Go back
Create new file
Upload files Find file
Branch: master
Switch branches/tags

    Branches
    Tags

master
Nothing to show
Nothing to show
New pull request
Fetching latest commit…
Cannot retrieve the latest commit at this time.
Permalink
	Failed to load latest commit information.
	nl.usetechnology.cmake.feature 	fixed "generator listing" issue for old cmake versions. 	Oct 12, 2016
	nl.usetechnology.cmake.update-site 	improved toolchain handling, removed unused items. 	May 29, 2016
	nl.usetechnology.cmake 	Fixed Wizard issues and added feature request #4 . 	Feb 28, 2017
	resources/ screenshots 	added wizard screenshots for wiki 	Oct 12, 2016
	.gitignore 	improved toolchain handling, removed unused items. 	May 29, 2016
	LICENSE 	Initial commit 	Jul 20, 2015
	README.md 	Update README.md 	Oct 12, 2016
README.md
CMake Eclipse Helper

The CMake Eclipse Helper is a simplistic plug-in that tries to help the user through the rough edges of setting up their CMake-based projects within Eclipse for cross-compiling.

Internally, it uses CMakes "Eclipse Generator". So your projects do not have to meet any other prerequisites other than having a CMakeLists.txt in the projects root. Just use the option "CMake"->"Setup" in the context menu of your project and you can build your project using CMake (this even works, if the project wasn't a CDT-Project before).
Features

    Context menu to switch the Build Type ( Debug , Release , RelWithDebugInfo , etc.)
    Context menu to switch the Toolchain (Own toolchains can be added)
    Support for adding/removing source files and updating the globs (by automatically touching the CMakeLists.txt file).
    It provides simple context menus for your project to run the CMake generator and to tag "generated" files (like the .project and .cproject ) so you won't accidentally spam your version control system with changes on these files.

see https://github.com/USESystemEngineeringBV/cmake-eclipse-helper/wiki for more information about the plugin.
How to install?

Our eclipse update-site is available at: http://www.cmake-helper.eu/releases/1.0
How to define toolchains?

You require to configure the path of the directory, where the toolchain files are stored. The parser uses the following pattern: toolchain.<name>.cmake

The "name" will be picked up by the toolchain context menu.

See https://github.com/USESystemEngineeringBV/cmake-eclipse-helper/wiki/HowToAddToolchain for more information about how to manage toolchains.
How to use the plug-in?

All you need is a project with a CMakeLists.txt file in the projects root.

    Right-click your project
    Choose "CMake"->"Setup" in the context menu
    Build your project

In case your CMakeLists.txt does not contain any syntax errors thats all you need to do.

If you have a arm toolchain file and you want to switch from x86_64 to the arm toolchain this is the way to go.

    Right-click your project
    Choose CMake -> Toolchains -> name-of-your-arm-toolchain
    Build your project

You will find your binaries in the "bin/name-of-your-arm-toolchain" directory (in case you did not specify a different output directory within your CMakeLists.txt ).

See https://github.com/USESystemEngineeringBV/cmake-eclipse-helper/wiki/HowToUse for more information about how to use the plugin.

    © 2018 GitHub , Inc.
    Terms
    Privacy
    Security
    Status
    Help

    Contact GitHub
    API
    Training
    Shop
    Blog
    About

You can't perform that action at this time.
You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session.
Press h to open a hovercard with more details.
