
Skip to content
This repository

    Pull requests
    Issues
    Marketplace
    Explore

        New repository Import repository New gist New organization
        This repository
        New issue 
    @Chen-Zhihui
        Signed in as Chen-Zhihui
        Your profile
        Your stars
        Your gists
        Help
        Settings
        Sign out

Sign out

    Watch 14
    Notifications
    Not watching Be notified when participating or @mentioned. Watch
    Watching Be notified of all conversations. Unwatch
    Ignoring Never be notified. Stop ignoring
    Unstar 73
    Star 73
    Fork
    Where should we fork this repository?
    Loading
    29

dorkbox / UDT
Code Issues 1 Pull requests 0 Projects 0 Wiki Insights
UDP-based Data Transfer Protocol

    18 commits
    1 branch
    0 releases
    1 contributor

    C++ 95.8%
    Makefile 1.8%
    Shell 1.5%
    Other 0.9%

C++ Makefile Shell Other
Clone or download
Use SSH
Clone with HTTPS

Use Git or checkout with SVN using the web URL.
Use HTTPS
Clone with SSH

Use an SSH key and passphrase from account.
Download ZIP
Launching GitHub Desktop ...

If nothing happens, download GitHub Desktop and try again.

Go back
Launching GitHub Desktop ...

If nothing happens, download GitHub Desktop and try again.

Go back
Launching Xcode ...

If nothing happens, download Xcode and try again.

Go back
Launching Visual Studio ...

If nothing happens, download the GitHub extension for Visual Studio and try again.

Go back
Create new file
Upload files Find file
Branch: master
Switch branches/tags

    Branches
    Tags

master
Nothing to show
Nothing to show
New pull request
Fetching latest commit…
Cannot retrieve the latest commit at this time.
Permalink
	Failed to load latest commit information.
	src 	Removed java bits. Updated release notes. 	Dec 3, 2017
	udt-doc 	Removed java bits. Updated release notes. 	Dec 3, 2017
	.gitignore 	Updated .gitignore 	Dec 3, 2017
	CMakeLists.txt 	Added CMake, removed java bits from build 	Dec 3, 2017
	LICENSE 	Updated license information 	Jan 22, 2015
	LICENSE.Apachev2 	Updated license information 	Jan 22, 2015
	LICENSE.BSD 	Updated license information 	Jan 22, 2015
	README.md 	Updated readme (remove java bits) 	Dec 3, 2017
	build.sh 	Updated license information 	Jan 22, 2015
	make_common.mak 	Added CMake, removed java bits from build 	Dec 3, 2017
	make_linux.mak 	Fixed build path locations. Cleaned up code formatting 	Jul 7, 2015
	make_macosx.mak 	Fixed build path locations. Cleaned up code formatting 	Jul 7, 2015
	make_windows.mak 	Fixed build path locations. Cleaned up code formatting 	Jul 7, 2015
README.md
Breaking the Data Transfer Bottleneck

UDT is a reliable UDP based application level data transport protocol for distributed data intensive applications over wide area high-speed networks. UDT uses UDP to transfer bulk data with its own reliability control and congestion control mechanisms. The new protocol can transfer data at a much higher speed than TCP does. UDT is also a highly configurable framework that can accommodate various congestion control algorithms.

    Presentation: PowerPoint
    Poster: PDF

TCP

TCP is slow . UDT is fast .
UDT

UDT is developed by Yunhong Gu and others at University of Illinois and Google.

UDT C++ implementation is available under BSD license
Key Features

Fast . UDT is designed for extremely high speed networks and it has been used to support global data transfer of terabyte sized data sets. UDT is the core technology in many commercial WAN acceleration products.

Fair and Friendly . Concurrent UDT flows can share the available bandwidth fairly, while UDT also leaves enough bandwidth for TCP.

Easy to Use . UDT resides completely at the application level. Users can simply download the software and start to use it. No kernel reconfiguration is needed. In addition, UDT's API is very similar to the traditional socket API so that existing applications can be easily modified.

Highly Configurable . UDT supports user defined congestion control algorithms with a simple configuration. Users may also modify UDT to suit various situations. This feature can also be used by students and researchers to investigate new control algorithms.

Firewall Friendly . UDT is completely based on UDP, which makes it easier to traverse the firewall. In addition, multiple UDT flows can share a single UDP port, thus a firewall can open only one UDP port for all UDT connections. UDT also supports rendezvous connection setup.
Supported Platforms
ARCH/OS 	Linux 	Mac OSX 	Windows
arm-android 	??? 		
arm-rpi 	??? 		
x86/i386 	YES 	YES 	YES
x86-64/amd64 	YES 	YES 	YES
Current Implementation

    Updates to UDT source 4.11 to fix some misc. CPU timing bugs in Linux (via the sourceforge help forum).
    Cleaned up source for cross-compile environment in linux
    Cleaned up preprocessor symbols and removed deprecated
    Strips unneeded symbols, drastically reducing size
    Static linking to mingw libraries for windows build

    © 2018 GitHub , Inc.
    Terms
    Privacy
    Security
    Status
    Help

    Contact GitHub
    API
    Training
    Shop
    Blog
    About

You can't perform that action at this time.
You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session.
Press h to open a hovercard with more details.
